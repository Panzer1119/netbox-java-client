/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.codemakers.netbox.client.model.Airflow;
import de.codemakers.netbox.client.model.Face;
import de.codemakers.netbox.client.model.NestedCluster;
import de.codemakers.netbox.client.model.NestedDevice;
import de.codemakers.netbox.client.model.NestedDeviceRole;
import de.codemakers.netbox.client.model.NestedDeviceType;
import de.codemakers.netbox.client.model.NestedIPAddress;
import de.codemakers.netbox.client.model.NestedLocation;
import de.codemakers.netbox.client.model.NestedPlatform;
import de.codemakers.netbox.client.model.NestedRack;
import de.codemakers.netbox.client.model.NestedSite;
import de.codemakers.netbox.client.model.NestedTag;
import de.codemakers.netbox.client.model.NestedTenant;
import de.codemakers.netbox.client.model.NestedVirtualChassis;
import de.codemakers.netbox.client.model.Status2;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DeviceWithConfigContext
 */
public class DeviceWithConfigContextTest {
    private final DeviceWithConfigContext model = new DeviceWithConfigContext();

    /**
     * Model tests for DeviceWithConfigContext
     */
    @Test
    public void testDeviceWithConfigContext() {
        // TODO: test DeviceWithConfigContext
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'display'
     */
    @Test
    public void displayTest() {
        // TODO: test display
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'deviceType'
     */
    @Test
    public void deviceTypeTest() {
        // TODO: test deviceType
    }

    /**
     * Test the property 'deviceRole'
     */
    @Test
    public void deviceRoleTest() {
        // TODO: test deviceRole
    }

    /**
     * Test the property 'tenant'
     */
    @Test
    public void tenantTest() {
        // TODO: test tenant
    }

    /**
     * Test the property 'platform'
     */
    @Test
    public void platformTest() {
        // TODO: test platform
    }

    /**
     * Test the property 'serial'
     */
    @Test
    public void serialTest() {
        // TODO: test serial
    }

    /**
     * Test the property 'assetTag'
     */
    @Test
    public void assetTagTest() {
        // TODO: test assetTag
    }

    /**
     * Test the property 'site'
     */
    @Test
    public void siteTest() {
        // TODO: test site
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'rack'
     */
    @Test
    public void rackTest() {
        // TODO: test rack
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'face'
     */
    @Test
    public void faceTest() {
        // TODO: test face
    }

    /**
     * Test the property 'parentDevice'
     */
    @Test
    public void parentDeviceTest() {
        // TODO: test parentDevice
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'airflow'
     */
    @Test
    public void airflowTest() {
        // TODO: test airflow
    }

    /**
     * Test the property 'primaryIp'
     */
    @Test
    public void primaryIpTest() {
        // TODO: test primaryIp
    }

    /**
     * Test the property 'primaryIp4'
     */
    @Test
    public void primaryIp4Test() {
        // TODO: test primaryIp4
    }

    /**
     * Test the property 'primaryIp6'
     */
    @Test
    public void primaryIp6Test() {
        // TODO: test primaryIp6
    }

    /**
     * Test the property 'cluster'
     */
    @Test
    public void clusterTest() {
        // TODO: test cluster
    }

    /**
     * Test the property 'virtualChassis'
     */
    @Test
    public void virtualChassisTest() {
        // TODO: test virtualChassis
    }

    /**
     * Test the property 'vcPosition'
     */
    @Test
    public void vcPositionTest() {
        // TODO: test vcPosition
    }

    /**
     * Test the property 'vcPriority'
     */
    @Test
    public void vcPriorityTest() {
        // TODO: test vcPriority
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'localContextData'
     */
    @Test
    public void localContextDataTest() {
        // TODO: test localContextData
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'configContext'
     */
    @Test
    public void configContextTest() {
        // TODO: test configContext
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
