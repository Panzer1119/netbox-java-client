/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.codemakers.netbox.client.model.GenericObject;
import de.codemakers.netbox.client.model.NestedTag;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * WritableCable
 */
@JsonPropertyOrder({
  WritableCable.JSON_PROPERTY_ID,
  WritableCable.JSON_PROPERTY_URL,
  WritableCable.JSON_PROPERTY_DISPLAY,
  WritableCable.JSON_PROPERTY_TYPE,
  WritableCable.JSON_PROPERTY_A_TERMINATIONS,
  WritableCable.JSON_PROPERTY_B_TERMINATIONS,
  WritableCable.JSON_PROPERTY_STATUS,
  WritableCable.JSON_PROPERTY_TENANT,
  WritableCable.JSON_PROPERTY_LABEL,
  WritableCable.JSON_PROPERTY_COLOR,
  WritableCable.JSON_PROPERTY_LENGTH,
  WritableCable.JSON_PROPERTY_LENGTH_UNIT,
  WritableCable.JSON_PROPERTY_TAGS,
  WritableCable.JSON_PROPERTY_CUSTOM_FIELDS,
  WritableCable.JSON_PROPERTY_CREATED,
  WritableCable.JSON_PROPERTY_LAST_UPDATED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-31T15:10:46.540964900+02:00[Europe/Berlin]")
public class WritableCable {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_URL = "url";
  private URI url;

  public static final String JSON_PROPERTY_DISPLAY = "display";
  private String display;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    CAT3("cat3"),
    
    CAT5("cat5"),
    
    CAT5E("cat5e"),
    
    CAT6("cat6"),
    
    CAT6A("cat6a"),
    
    CAT7("cat7"),
    
    CAT7A("cat7a"),
    
    CAT8("cat8"),
    
    DAC_ACTIVE("dac-active"),
    
    DAC_PASSIVE("dac-passive"),
    
    MRJ21_TRUNK("mrj21-trunk"),
    
    COAXIAL("coaxial"),
    
    MMF("mmf"),
    
    MMF_OM1("mmf-om1"),
    
    MMF_OM2("mmf-om2"),
    
    MMF_OM3("mmf-om3"),
    
    MMF_OM4("mmf-om4"),
    
    MMF_OM5("mmf-om5"),
    
    SMF("smf"),
    
    SMF_OS1("smf-os1"),
    
    SMF_OS2("smf-os2"),
    
    AOC("aoc"),
    
    POWER("power"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_A_TERMINATIONS = "a_terminations";
  private List<GenericObject> aTerminations = null;

  public static final String JSON_PROPERTY_B_TERMINATIONS = "b_terminations";
  private List<GenericObject> bTerminations = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    CONNECTED("connected"),
    
    PLANNED("planned"),
    
    DECOMMISSIONING("decommissioning"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_TENANT = "tenant";
  private JsonNullable<Integer> tenant = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  public static final String JSON_PROPERTY_LENGTH = "length";
  private JsonNullable<BigDecimal> length = JsonNullable.<BigDecimal>undefined();

  /**
   * Gets or Sets lengthUnit
   */
  public enum LengthUnitEnum {
    KM("km"),
    
    M("m"),
    
    CM("cm"),
    
    MI("mi"),
    
    FT("ft"),
    
    IN("in"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    LengthUnitEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LengthUnitEnum fromValue(String value) {
      for (LengthUnitEnum b : LengthUnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_LENGTH_UNIT = "length_unit";
  private LengthUnitEnum lengthUnit;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<NestedTag> tags = null;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "custom_fields";
  private Object customFields;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_LAST_UPDATED = "last_updated";
  private OffsetDateTime lastUpdated;

  public WritableCable() { 
  }

  @JsonCreator
  public WritableCable(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_URL) URI url, 
    @JsonProperty(JSON_PROPERTY_DISPLAY) String display, 
    @JsonProperty(JSON_PROPERTY_CREATED) OffsetDateTime created, 
    @JsonProperty(JSON_PROPERTY_LAST_UPDATED) OffsetDateTime lastUpdated
  ) {
  this();
    this.id = id;
    this.url = url;
    this.display = display;
    this.created = created;
    this.lastUpdated = lastUpdated;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUrl() {
    return url;
  }




   /**
   * Get display
   * @return display
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplay() {
    return display;
  }




  public WritableCable type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public WritableCable aTerminations(List<GenericObject> aTerminations) {
    this.aTerminations = aTerminations;
    return this;
  }

  public WritableCable addATerminationsItem(GenericObject aTerminationsItem) {
    if (this.aTerminations == null) {
      this.aTerminations = new ArrayList<>();
    }
    this.aTerminations.add(aTerminationsItem);
    return this;
  }

   /**
   * Get aTerminations
   * @return aTerminations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_A_TERMINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GenericObject> getaTerminations() {
    return aTerminations;
  }


  @JsonProperty(JSON_PROPERTY_A_TERMINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setaTerminations(List<GenericObject> aTerminations) {
    this.aTerminations = aTerminations;
  }


  public WritableCable bTerminations(List<GenericObject> bTerminations) {
    this.bTerminations = bTerminations;
    return this;
  }

  public WritableCable addBTerminationsItem(GenericObject bTerminationsItem) {
    if (this.bTerminations == null) {
      this.bTerminations = new ArrayList<>();
    }
    this.bTerminations.add(bTerminationsItem);
    return this;
  }

   /**
   * Get bTerminations
   * @return bTerminations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_B_TERMINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GenericObject> getbTerminations() {
    return bTerminations;
  }


  @JsonProperty(JSON_PROPERTY_B_TERMINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setbTerminations(List<GenericObject> bTerminations) {
    this.bTerminations = bTerminations;
  }


  public WritableCable status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public WritableCable tenant(Integer tenant) {
    this.tenant = JsonNullable.<Integer>of(tenant);
    return this;
  }

   /**
   * Get tenant
   * @return tenant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Integer getTenant() {
        return tenant.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTenant_JsonNullable() {
    return tenant;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANT)
  public void setTenant_JsonNullable(JsonNullable<Integer> tenant) {
    this.tenant = tenant;
  }

  public void setTenant(Integer tenant) {
    this.tenant = JsonNullable.<Integer>of(tenant);
  }


  public WritableCable label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public WritableCable color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public WritableCable length(BigDecimal length) {
    this.length = JsonNullable.<BigDecimal>of(length);
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public BigDecimal getLength() {
        return length.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getLength_JsonNullable() {
    return length;
  }
  
  @JsonProperty(JSON_PROPERTY_LENGTH)
  public void setLength_JsonNullable(JsonNullable<BigDecimal> length) {
    this.length = length;
  }

  public void setLength(BigDecimal length) {
    this.length = JsonNullable.<BigDecimal>of(length);
  }


  public WritableCable lengthUnit(LengthUnitEnum lengthUnit) {
    this.lengthUnit = lengthUnit;
    return this;
  }

   /**
   * Get lengthUnit
   * @return lengthUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LENGTH_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LengthUnitEnum getLengthUnit() {
    return lengthUnit;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLengthUnit(LengthUnitEnum lengthUnit) {
    this.lengthUnit = lengthUnit;
  }


  public WritableCable tags(List<NestedTag> tags) {
    this.tags = tags;
    return this;
  }

  public WritableCable addTagsItem(NestedTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<NestedTag> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<NestedTag> tags) {
    this.tags = tags;
  }


  public WritableCable customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreated() {
    return created;
  }




   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }




  /**
   * Return true if this WritableCable object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WritableCable writableCable = (WritableCable) o;
    return Objects.equals(this.id, writableCable.id) &&
        Objects.equals(this.url, writableCable.url) &&
        Objects.equals(this.display, writableCable.display) &&
        Objects.equals(this.type, writableCable.type) &&
        Objects.equals(this.aTerminations, writableCable.aTerminations) &&
        Objects.equals(this.bTerminations, writableCable.bTerminations) &&
        Objects.equals(this.status, writableCable.status) &&
        equalsNullable(this.tenant, writableCable.tenant) &&
        Objects.equals(this.label, writableCable.label) &&
        Objects.equals(this.color, writableCable.color) &&
        equalsNullable(this.length, writableCable.length) &&
        Objects.equals(this.lengthUnit, writableCable.lengthUnit) &&
        Objects.equals(this.tags, writableCable.tags) &&
        Objects.equals(this.customFields, writableCable.customFields) &&
        Objects.equals(this.created, writableCable.created) &&
        Objects.equals(this.lastUpdated, writableCable.lastUpdated);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, display, type, aTerminations, bTerminations, status, hashCodeNullable(tenant), label, color, hashCodeNullable(length), lengthUnit, tags, customFields, created, lastUpdated);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WritableCable {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    aTerminations: ").append(toIndentedString(aTerminations)).append("\n");
    sb.append("    bTerminations: ").append(toIndentedString(bTerminations)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    lengthUnit: ").append(toIndentedString(lengthUnit)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

