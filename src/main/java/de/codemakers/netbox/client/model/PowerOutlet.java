/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.codemakers.netbox.client.model.ComponentNestedModule;
import de.codemakers.netbox.client.model.FeedLeg;
import de.codemakers.netbox.client.model.NestedCable;
import de.codemakers.netbox.client.model.NestedDevice;
import de.codemakers.netbox.client.model.NestedPowerPort;
import de.codemakers.netbox.client.model.NestedTag;
import de.codemakers.netbox.client.model.Type4;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * PowerOutlet
 */
@JsonPropertyOrder({
  PowerOutlet.JSON_PROPERTY_ID,
  PowerOutlet.JSON_PROPERTY_URL,
  PowerOutlet.JSON_PROPERTY_DISPLAY,
  PowerOutlet.JSON_PROPERTY_DEVICE,
  PowerOutlet.JSON_PROPERTY_MODULE,
  PowerOutlet.JSON_PROPERTY_NAME,
  PowerOutlet.JSON_PROPERTY_LABEL,
  PowerOutlet.JSON_PROPERTY_TYPE,
  PowerOutlet.JSON_PROPERTY_POWER_PORT,
  PowerOutlet.JSON_PROPERTY_FEED_LEG,
  PowerOutlet.JSON_PROPERTY_DESCRIPTION,
  PowerOutlet.JSON_PROPERTY_MARK_CONNECTED,
  PowerOutlet.JSON_PROPERTY_CABLE,
  PowerOutlet.JSON_PROPERTY_LINK_PEER,
  PowerOutlet.JSON_PROPERTY_LINK_PEER_TYPE,
  PowerOutlet.JSON_PROPERTY_CONNECTED_ENDPOINT,
  PowerOutlet.JSON_PROPERTY_CONNECTED_ENDPOINT_TYPE,
  PowerOutlet.JSON_PROPERTY_CONNECTED_ENDPOINT_REACHABLE,
  PowerOutlet.JSON_PROPERTY_TAGS,
  PowerOutlet.JSON_PROPERTY_CUSTOM_FIELDS,
  PowerOutlet.JSON_PROPERTY_CREATED,
  PowerOutlet.JSON_PROPERTY_LAST_UPDATED,
  PowerOutlet.JSON_PROPERTY_OCCUPIED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-31T18:36:37.665487300+02:00[Europe/Berlin]")
public class PowerOutlet {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_URL = "url";
  private URI url;

  public static final String JSON_PROPERTY_DISPLAY = "display";
  private String display;

  public static final String JSON_PROPERTY_DEVICE = "device";
  private NestedDevice device;

  public static final String JSON_PROPERTY_MODULE = "module";
  private JsonNullable<ComponentNestedModule> module = JsonNullable.<ComponentNestedModule>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_TYPE = "type";
  private Type4 type;

  public static final String JSON_PROPERTY_POWER_PORT = "power_port";
  private JsonNullable<NestedPowerPort> powerPort = JsonNullable.<NestedPowerPort>undefined();

  public static final String JSON_PROPERTY_FEED_LEG = "feed_leg";
  private FeedLeg feedLeg;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_MARK_CONNECTED = "mark_connected";
  private Boolean markConnected;

  public static final String JSON_PROPERTY_CABLE = "cable";
  private NestedCable cable;

  public static final String JSON_PROPERTY_LINK_PEER = "link_peer";
  private Map<String, String> linkPeer = null;

  public static final String JSON_PROPERTY_LINK_PEER_TYPE = "link_peer_type";
  private String linkPeerType;

  public static final String JSON_PROPERTY_CONNECTED_ENDPOINT = "connected_endpoint";
  private Map<String, String> connectedEndpoint = null;

  public static final String JSON_PROPERTY_CONNECTED_ENDPOINT_TYPE = "connected_endpoint_type";
  private String connectedEndpointType;

  public static final String JSON_PROPERTY_CONNECTED_ENDPOINT_REACHABLE = "connected_endpoint_reachable";
  private Boolean connectedEndpointReachable;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<NestedTag> tags = null;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "custom_fields";
  private Object customFields;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_LAST_UPDATED = "last_updated";
  private OffsetDateTime lastUpdated;

  public static final String JSON_PROPERTY_OCCUPIED = "_occupied";
  private Boolean occupied;

  public PowerOutlet() { 
  }

  @JsonCreator
  public PowerOutlet(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_URL) URI url, 
    @JsonProperty(JSON_PROPERTY_DISPLAY) String display, 
    @JsonProperty(JSON_PROPERTY_LINK_PEER) Map<String, String> linkPeer, 
    @JsonProperty(JSON_PROPERTY_LINK_PEER_TYPE) String linkPeerType, 
    @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT) Map<String, String> connectedEndpoint, 
    @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT_TYPE) String connectedEndpointType, 
    @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT_REACHABLE) Boolean connectedEndpointReachable, 
    @JsonProperty(JSON_PROPERTY_CREATED) OffsetDateTime created, 
    @JsonProperty(JSON_PROPERTY_LAST_UPDATED) OffsetDateTime lastUpdated, 
    @JsonProperty(JSON_PROPERTY_OCCUPIED) Boolean occupied
  ) {
  this();
    this.id = id;
    this.url = url;
    this.display = display;
    this.linkPeer = linkPeer;
    this.linkPeerType = linkPeerType;
    this.connectedEndpoint = connectedEndpoint;
    this.connectedEndpointType = connectedEndpointType;
    this.connectedEndpointReachable = connectedEndpointReachable;
    this.created = created;
    this.lastUpdated = lastUpdated;
    this.occupied = occupied;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUrl() {
    return url;
  }




   /**
   * Get display
   * @return display
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplay() {
    return display;
  }




  public PowerOutlet device(NestedDevice device) {
    this.device = device;
    return this;
  }

   /**
   * Get device
   * @return device
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NestedDevice getDevice() {
    return device;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDevice(NestedDevice device) {
    this.device = device;
  }


  public PowerOutlet module(ComponentNestedModule module) {
    this.module = JsonNullable.<ComponentNestedModule>of(module);
    return this;
  }

   /**
   * Get module
   * @return module
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ComponentNestedModule getModule() {
        return module.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ComponentNestedModule> getModule_JsonNullable() {
    return module;
  }
  
  @JsonProperty(JSON_PROPERTY_MODULE)
  public void setModule_JsonNullable(JsonNullable<ComponentNestedModule> module) {
    this.module = module;
  }

  public void setModule(ComponentNestedModule module) {
    this.module = JsonNullable.<ComponentNestedModule>of(module);
  }


  public PowerOutlet name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public PowerOutlet label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Physical label
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Physical label")
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public PowerOutlet type(Type4 type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Type4 getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(Type4 type) {
    this.type = type;
  }


  public PowerOutlet powerPort(NestedPowerPort powerPort) {
    this.powerPort = JsonNullable.<NestedPowerPort>of(powerPort);
    return this;
  }

   /**
   * Get powerPort
   * @return powerPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NestedPowerPort getPowerPort() {
        return powerPort.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NestedPowerPort> getPowerPort_JsonNullable() {
    return powerPort;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_PORT)
  public void setPowerPort_JsonNullable(JsonNullable<NestedPowerPort> powerPort) {
    this.powerPort = powerPort;
  }

  public void setPowerPort(NestedPowerPort powerPort) {
    this.powerPort = JsonNullable.<NestedPowerPort>of(powerPort);
  }


  public PowerOutlet feedLeg(FeedLeg feedLeg) {
    this.feedLeg = feedLeg;
    return this;
  }

   /**
   * Get feedLeg
   * @return feedLeg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FEED_LEG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FeedLeg getFeedLeg() {
    return feedLeg;
  }


  @JsonProperty(JSON_PROPERTY_FEED_LEG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeedLeg(FeedLeg feedLeg) {
    this.feedLeg = feedLeg;
  }


  public PowerOutlet description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PowerOutlet markConnected(Boolean markConnected) {
    this.markConnected = markConnected;
    return this;
  }

   /**
   * Treat as if a cable is connected
   * @return markConnected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Treat as if a cable is connected")
  @JsonProperty(JSON_PROPERTY_MARK_CONNECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMarkConnected() {
    return markConnected;
  }


  @JsonProperty(JSON_PROPERTY_MARK_CONNECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarkConnected(Boolean markConnected) {
    this.markConnected = markConnected;
  }


  public PowerOutlet cable(NestedCable cable) {
    this.cable = cable;
    return this;
  }

   /**
   * Get cable
   * @return cable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NestedCable getCable() {
    return cable;
  }


  @JsonProperty(JSON_PROPERTY_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCable(NestedCable cable) {
    this.cable = cable;
  }


   /**
   *  Return the appropriate serializer for the link termination model. 
   * @return linkPeer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " Return the appropriate serializer for the link termination model. ")
  @JsonProperty(JSON_PROPERTY_LINK_PEER)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getLinkPeer() {
    return linkPeer;
  }




   /**
   * Get linkPeerType
   * @return linkPeerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LINK_PEER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkPeerType() {
    return linkPeerType;
  }




   /**
   *  Return the appropriate serializer for the type of connected object. 
   * @return connectedEndpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " Return the appropriate serializer for the type of connected object. ")
  @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getConnectedEndpoint() {
    return connectedEndpoint;
  }




   /**
   * Get connectedEndpointType
   * @return connectedEndpointType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectedEndpointType() {
    return connectedEndpointType;
  }




   /**
   * Get connectedEndpointReachable
   * @return connectedEndpointReachable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT_REACHABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConnectedEndpointReachable() {
    return connectedEndpointReachable;
  }




  public PowerOutlet tags(List<NestedTag> tags) {
    this.tags = tags;
    return this;
  }

  public PowerOutlet addTagsItem(NestedTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<NestedTag> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<NestedTag> tags) {
    this.tags = tags;
  }


  public PowerOutlet customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreated() {
    return created;
  }




   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }




   /**
   * Get occupied
   * @return occupied
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OCCUPIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOccupied() {
    return occupied;
  }




  /**
   * Return true if this PowerOutlet object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PowerOutlet powerOutlet = (PowerOutlet) o;
    return Objects.equals(this.id, powerOutlet.id) &&
        Objects.equals(this.url, powerOutlet.url) &&
        Objects.equals(this.display, powerOutlet.display) &&
        Objects.equals(this.device, powerOutlet.device) &&
        equalsNullable(this.module, powerOutlet.module) &&
        Objects.equals(this.name, powerOutlet.name) &&
        Objects.equals(this.label, powerOutlet.label) &&
        Objects.equals(this.type, powerOutlet.type) &&
        equalsNullable(this.powerPort, powerOutlet.powerPort) &&
        Objects.equals(this.feedLeg, powerOutlet.feedLeg) &&
        Objects.equals(this.description, powerOutlet.description) &&
        Objects.equals(this.markConnected, powerOutlet.markConnected) &&
        Objects.equals(this.cable, powerOutlet.cable) &&
        Objects.equals(this.linkPeer, powerOutlet.linkPeer) &&
        Objects.equals(this.linkPeerType, powerOutlet.linkPeerType) &&
        Objects.equals(this.connectedEndpoint, powerOutlet.connectedEndpoint) &&
        Objects.equals(this.connectedEndpointType, powerOutlet.connectedEndpointType) &&
        Objects.equals(this.connectedEndpointReachable, powerOutlet.connectedEndpointReachable) &&
        Objects.equals(this.tags, powerOutlet.tags) &&
        Objects.equals(this.customFields, powerOutlet.customFields) &&
        Objects.equals(this.created, powerOutlet.created) &&
        Objects.equals(this.lastUpdated, powerOutlet.lastUpdated) &&
        Objects.equals(this.occupied, powerOutlet.occupied);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, display, device, hashCodeNullable(module), name, label, type, hashCodeNullable(powerPort), feedLeg, description, markConnected, cable, linkPeer, linkPeerType, connectedEndpoint, connectedEndpointType, connectedEndpointReachable, tags, customFields, created, lastUpdated, occupied);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PowerOutlet {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    powerPort: ").append(toIndentedString(powerPort)).append("\n");
    sb.append("    feedLeg: ").append(toIndentedString(feedLeg)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    markConnected: ").append(toIndentedString(markConnected)).append("\n");
    sb.append("    cable: ").append(toIndentedString(cable)).append("\n");
    sb.append("    linkPeer: ").append(toIndentedString(linkPeer)).append("\n");
    sb.append("    linkPeerType: ").append(toIndentedString(linkPeerType)).append("\n");
    sb.append("    connectedEndpoint: ").append(toIndentedString(connectedEndpoint)).append("\n");
    sb.append("    connectedEndpointType: ").append(toIndentedString(connectedEndpointType)).append("\n");
    sb.append("    connectedEndpointReachable: ").append(toIndentedString(connectedEndpointReachable)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    occupied: ").append(toIndentedString(occupied)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

