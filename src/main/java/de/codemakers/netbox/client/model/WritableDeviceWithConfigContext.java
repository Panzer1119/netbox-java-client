/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.codemakers.netbox.client.model.NestedDevice;
import de.codemakers.netbox.client.model.NestedTag;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import de.codemakers.netbox.client.JSON;

/**
 * WritableDeviceWithConfigContext
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-29T15:14:28.278845400+02:00[Europe/Berlin]")
public class WritableDeviceWithConfigContext {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_DISPLAY = "display";
  @SerializedName(SERIALIZED_NAME_DISPLAY)
  private String display;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DEVICE_TYPE = "device_type";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE)
  private Integer deviceType;

  public static final String SERIALIZED_NAME_DEVICE_ROLE = "device_role";
  @SerializedName(SERIALIZED_NAME_DEVICE_ROLE)
  private Integer deviceRole;

  public static final String SERIALIZED_NAME_TENANT = "tenant";
  @SerializedName(SERIALIZED_NAME_TENANT)
  private Integer tenant;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private Integer platform;

  public static final String SERIALIZED_NAME_SERIAL = "serial";
  @SerializedName(SERIALIZED_NAME_SERIAL)
  private String serial;

  public static final String SERIALIZED_NAME_ASSET_TAG = "asset_tag";
  @SerializedName(SERIALIZED_NAME_ASSET_TAG)
  private String assetTag;

  public static final String SERIALIZED_NAME_SITE = "site";
  @SerializedName(SERIALIZED_NAME_SITE)
  private Integer site;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Integer location;

  public static final String SERIALIZED_NAME_RACK = "rack";
  @SerializedName(SERIALIZED_NAME_RACK)
  private Integer rack;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private BigDecimal position;

  /**
   * Gets or Sets face
   */
  @JsonAdapter(FaceEnum.Adapter.class)
  public enum FaceEnum {
    FRONT("front"),
    
    REAR("rear"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    FaceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FaceEnum fromValue(String value) {
      for (FaceEnum b : FaceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FaceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FaceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FaceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FaceEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FACE = "face";
  @SerializedName(SERIALIZED_NAME_FACE)
  private FaceEnum face;

  public static final String SERIALIZED_NAME_PARENT_DEVICE = "parent_device";
  @SerializedName(SERIALIZED_NAME_PARENT_DEVICE)
  private NestedDevice parentDevice;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    OFFLINE("offline"),
    
    ACTIVE("active"),
    
    PLANNED("planned"),
    
    STAGED("staged"),
    
    FAILED("failed"),
    
    INVENTORY("inventory"),
    
    DECOMMISSIONING("decommissioning"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  /**
   * Gets or Sets airflow
   */
  @JsonAdapter(AirflowEnum.Adapter.class)
  public enum AirflowEnum {
    FRONT_TO_REAR("front-to-rear"),
    
    REAR_TO_FRONT("rear-to-front"),
    
    LEFT_TO_RIGHT("left-to-right"),
    
    RIGHT_TO_LEFT("right-to-left"),
    
    SIDE_TO_REAR("side-to-rear"),
    
    PASSIVE("passive"),
    
    MIXED("mixed"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    AirflowEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AirflowEnum fromValue(String value) {
      for (AirflowEnum b : AirflowEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AirflowEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AirflowEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AirflowEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AirflowEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_AIRFLOW = "airflow";
  @SerializedName(SERIALIZED_NAME_AIRFLOW)
  private AirflowEnum airflow;

  public static final String SERIALIZED_NAME_PRIMARY_IP = "primary_ip";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IP)
  private String primaryIp;

  public static final String SERIALIZED_NAME_PRIMARY_IP4 = "primary_ip4";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IP4)
  private Integer primaryIp4;

  public static final String SERIALIZED_NAME_PRIMARY_IP6 = "primary_ip6";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IP6)
  private Integer primaryIp6;

  public static final String SERIALIZED_NAME_CLUSTER = "cluster";
  @SerializedName(SERIALIZED_NAME_CLUSTER)
  private Integer cluster;

  public static final String SERIALIZED_NAME_VIRTUAL_CHASSIS = "virtual_chassis";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_CHASSIS)
  private Integer virtualChassis;

  public static final String SERIALIZED_NAME_VC_POSITION = "vc_position";
  @SerializedName(SERIALIZED_NAME_VC_POSITION)
  private Integer vcPosition;

  public static final String SERIALIZED_NAME_VC_PRIORITY = "vc_priority";
  @SerializedName(SERIALIZED_NAME_VC_PRIORITY)
  private Integer vcPriority;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_LOCAL_CONTEXT_DATA = "local_context_data";
  @SerializedName(SERIALIZED_NAME_LOCAL_CONTEXT_DATA)
  private String localContextData;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<NestedTag> tags = null;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_CONFIG_CONTEXT = "config_context";
  @SerializedName(SERIALIZED_NAME_CONFIG_CONTEXT)
  private Map<String, String> configContext = null;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "last_updated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public WritableDeviceWithConfigContext() { 
  }

  
  public WritableDeviceWithConfigContext(
     Integer id, 
     URI url, 
     String display, 
     String primaryIp, 
     Map<String, String> configContext, 
     OffsetDateTime created, 
     OffsetDateTime lastUpdated
  ) {
    this();
    this.id = id;
    this.url = url;
    this.display = display;
    this.primaryIp = primaryIp;
    this.configContext = configContext;
    this.created = created;
    this.lastUpdated = lastUpdated;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getUrl() {
    return url;
  }




   /**
   * Get display
   * @return display
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplay() {
    return display;
  }




  public WritableDeviceWithConfigContext name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public WritableDeviceWithConfigContext deviceType(Integer deviceType) {
    
    this.deviceType = deviceType;
    return this;
  }

   /**
   * Get deviceType
   * @return deviceType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getDeviceType() {
    return deviceType;
  }


  public void setDeviceType(Integer deviceType) {
    this.deviceType = deviceType;
  }


  public WritableDeviceWithConfigContext deviceRole(Integer deviceRole) {
    
    this.deviceRole = deviceRole;
    return this;
  }

   /**
   * Get deviceRole
   * @return deviceRole
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getDeviceRole() {
    return deviceRole;
  }


  public void setDeviceRole(Integer deviceRole) {
    this.deviceRole = deviceRole;
  }


  public WritableDeviceWithConfigContext tenant(Integer tenant) {
    
    this.tenant = tenant;
    return this;
  }

   /**
   * Get tenant
   * @return tenant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Integer getTenant() {
    return tenant;
  }


  public void setTenant(Integer tenant) {
    this.tenant = tenant;
  }


  public WritableDeviceWithConfigContext platform(Integer platform) {
    
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPlatform() {
    return platform;
  }


  public void setPlatform(Integer platform) {
    this.platform = platform;
  }


  public WritableDeviceWithConfigContext serial(String serial) {
    
    this.serial = serial;
    return this;
  }

   /**
   * Get serial
   * @return serial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSerial() {
    return serial;
  }


  public void setSerial(String serial) {
    this.serial = serial;
  }


  public WritableDeviceWithConfigContext assetTag(String assetTag) {
    
    this.assetTag = assetTag;
    return this;
  }

   /**
   * A unique tag used to identify this device
   * @return assetTag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique tag used to identify this device")

  public String getAssetTag() {
    return assetTag;
  }


  public void setAssetTag(String assetTag) {
    this.assetTag = assetTag;
  }


  public WritableDeviceWithConfigContext site(Integer site) {
    
    this.site = site;
    return this;
  }

   /**
   * Get site
   * @return site
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getSite() {
    return site;
  }


  public void setSite(Integer site) {
    this.site = site;
  }


  public WritableDeviceWithConfigContext location(Integer location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLocation() {
    return location;
  }


  public void setLocation(Integer location) {
    this.location = location;
  }


  public WritableDeviceWithConfigContext rack(Integer rack) {
    
    this.rack = rack;
    return this;
  }

   /**
   * Get rack
   * @return rack
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Integer getRack() {
    return rack;
  }


  public void setRack(Integer rack) {
    this.rack = rack;
  }


  public WritableDeviceWithConfigContext position(BigDecimal position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * minimum: 0.5
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getPosition() {
    return position;
  }


  public void setPosition(BigDecimal position) {
    this.position = position;
  }


  public WritableDeviceWithConfigContext face(FaceEnum face) {
    
    this.face = face;
    return this;
  }

   /**
   * Get face
   * @return face
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public FaceEnum getFace() {
    return face;
  }


  public void setFace(FaceEnum face) {
    this.face = face;
  }


  public WritableDeviceWithConfigContext parentDevice(NestedDevice parentDevice) {
    
    this.parentDevice = parentDevice;
    return this;
  }

   /**
   * Get parentDevice
   * @return parentDevice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NestedDevice getParentDevice() {
    return parentDevice;
  }


  public void setParentDevice(NestedDevice parentDevice) {
    this.parentDevice = parentDevice;
  }


  public WritableDeviceWithConfigContext status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public WritableDeviceWithConfigContext airflow(AirflowEnum airflow) {
    
    this.airflow = airflow;
    return this;
  }

   /**
   * Get airflow
   * @return airflow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AirflowEnum getAirflow() {
    return airflow;
  }


  public void setAirflow(AirflowEnum airflow) {
    this.airflow = airflow;
  }


   /**
   * Get primaryIp
   * @return primaryIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryIp() {
    return primaryIp;
  }




  public WritableDeviceWithConfigContext primaryIp4(Integer primaryIp4) {
    
    this.primaryIp4 = primaryIp4;
    return this;
  }

   /**
   * Get primaryIp4
   * @return primaryIp4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPrimaryIp4() {
    return primaryIp4;
  }


  public void setPrimaryIp4(Integer primaryIp4) {
    this.primaryIp4 = primaryIp4;
  }


  public WritableDeviceWithConfigContext primaryIp6(Integer primaryIp6) {
    
    this.primaryIp6 = primaryIp6;
    return this;
  }

   /**
   * Get primaryIp6
   * @return primaryIp6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPrimaryIp6() {
    return primaryIp6;
  }


  public void setPrimaryIp6(Integer primaryIp6) {
    this.primaryIp6 = primaryIp6;
  }


  public WritableDeviceWithConfigContext cluster(Integer cluster) {
    
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCluster() {
    return cluster;
  }


  public void setCluster(Integer cluster) {
    this.cluster = cluster;
  }


  public WritableDeviceWithConfigContext virtualChassis(Integer virtualChassis) {
    
    this.virtualChassis = virtualChassis;
    return this;
  }

   /**
   * Get virtualChassis
   * @return virtualChassis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Integer getVirtualChassis() {
    return virtualChassis;
  }


  public void setVirtualChassis(Integer virtualChassis) {
    this.virtualChassis = virtualChassis;
  }


  public WritableDeviceWithConfigContext vcPosition(Integer vcPosition) {
    
    this.vcPosition = vcPosition;
    return this;
  }

   /**
   * Get vcPosition
   * minimum: 0
   * maximum: 255
   * @return vcPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getVcPosition() {
    return vcPosition;
  }


  public void setVcPosition(Integer vcPosition) {
    this.vcPosition = vcPosition;
  }


  public WritableDeviceWithConfigContext vcPriority(Integer vcPriority) {
    
    this.vcPriority = vcPriority;
    return this;
  }

   /**
   * Get vcPriority
   * minimum: 0
   * maximum: 255
   * @return vcPriority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getVcPriority() {
    return vcPriority;
  }


  public void setVcPriority(Integer vcPriority) {
    this.vcPriority = vcPriority;
  }


  public WritableDeviceWithConfigContext comments(String comments) {
    
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    this.comments = comments;
  }


  public WritableDeviceWithConfigContext localContextData(String localContextData) {
    
    this.localContextData = localContextData;
    return this;
  }

   /**
   * Get localContextData
   * @return localContextData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalContextData() {
    return localContextData;
  }


  public void setLocalContextData(String localContextData) {
    this.localContextData = localContextData;
  }


  public WritableDeviceWithConfigContext tags(List<NestedTag> tags) {
    
    this.tags = tags;
    return this;
  }

  public WritableDeviceWithConfigContext addTagsItem(NestedTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NestedTag> getTags() {
    return tags;
  }


  public void setTags(List<NestedTag> tags) {
    this.tags = tags;
  }


  public WritableDeviceWithConfigContext customFields(Object customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCustomFields() {
    return customFields;
  }


  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get configContext
   * @return configContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getConfigContext() {
    return configContext;
  }




   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreated() {
    return created;
  }




   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }





  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WritableDeviceWithConfigContext writableDeviceWithConfigContext = (WritableDeviceWithConfigContext) o;
    return Objects.equals(this.id, writableDeviceWithConfigContext.id) &&
        Objects.equals(this.url, writableDeviceWithConfigContext.url) &&
        Objects.equals(this.display, writableDeviceWithConfigContext.display) &&
        Objects.equals(this.name, writableDeviceWithConfigContext.name) &&
        Objects.equals(this.deviceType, writableDeviceWithConfigContext.deviceType) &&
        Objects.equals(this.deviceRole, writableDeviceWithConfigContext.deviceRole) &&
        Objects.equals(this.tenant, writableDeviceWithConfigContext.tenant) &&
        Objects.equals(this.platform, writableDeviceWithConfigContext.platform) &&
        Objects.equals(this.serial, writableDeviceWithConfigContext.serial) &&
        Objects.equals(this.assetTag, writableDeviceWithConfigContext.assetTag) &&
        Objects.equals(this.site, writableDeviceWithConfigContext.site) &&
        Objects.equals(this.location, writableDeviceWithConfigContext.location) &&
        Objects.equals(this.rack, writableDeviceWithConfigContext.rack) &&
        Objects.equals(this.position, writableDeviceWithConfigContext.position) &&
        Objects.equals(this.face, writableDeviceWithConfigContext.face) &&
        Objects.equals(this.parentDevice, writableDeviceWithConfigContext.parentDevice) &&
        Objects.equals(this.status, writableDeviceWithConfigContext.status) &&
        Objects.equals(this.airflow, writableDeviceWithConfigContext.airflow) &&
        Objects.equals(this.primaryIp, writableDeviceWithConfigContext.primaryIp) &&
        Objects.equals(this.primaryIp4, writableDeviceWithConfigContext.primaryIp4) &&
        Objects.equals(this.primaryIp6, writableDeviceWithConfigContext.primaryIp6) &&
        Objects.equals(this.cluster, writableDeviceWithConfigContext.cluster) &&
        Objects.equals(this.virtualChassis, writableDeviceWithConfigContext.virtualChassis) &&
        Objects.equals(this.vcPosition, writableDeviceWithConfigContext.vcPosition) &&
        Objects.equals(this.vcPriority, writableDeviceWithConfigContext.vcPriority) &&
        Objects.equals(this.comments, writableDeviceWithConfigContext.comments) &&
        Objects.equals(this.localContextData, writableDeviceWithConfigContext.localContextData) &&
        Objects.equals(this.tags, writableDeviceWithConfigContext.tags) &&
        Objects.equals(this.customFields, writableDeviceWithConfigContext.customFields) &&
        Objects.equals(this.configContext, writableDeviceWithConfigContext.configContext) &&
        Objects.equals(this.created, writableDeviceWithConfigContext.created) &&
        Objects.equals(this.lastUpdated, writableDeviceWithConfigContext.lastUpdated);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, display, name, deviceType, deviceRole, tenant, platform, serial, assetTag, site, location, rack, position, face, parentDevice, status, airflow, primaryIp, primaryIp4, primaryIp6, cluster, virtualChassis, vcPosition, vcPriority, comments, localContextData, tags, customFields, configContext, created, lastUpdated);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WritableDeviceWithConfigContext {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    deviceRole: ").append(toIndentedString(deviceRole)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    assetTag: ").append(toIndentedString(assetTag)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    rack: ").append(toIndentedString(rack)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    face: ").append(toIndentedString(face)).append("\n");
    sb.append("    parentDevice: ").append(toIndentedString(parentDevice)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    airflow: ").append(toIndentedString(airflow)).append("\n");
    sb.append("    primaryIp: ").append(toIndentedString(primaryIp)).append("\n");
    sb.append("    primaryIp4: ").append(toIndentedString(primaryIp4)).append("\n");
    sb.append("    primaryIp6: ").append(toIndentedString(primaryIp6)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    virtualChassis: ").append(toIndentedString(virtualChassis)).append("\n");
    sb.append("    vcPosition: ").append(toIndentedString(vcPosition)).append("\n");
    sb.append("    vcPriority: ").append(toIndentedString(vcPriority)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    localContextData: ").append(toIndentedString(localContextData)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    configContext: ").append(toIndentedString(configContext)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("url");
    openapiFields.add("display");
    openapiFields.add("name");
    openapiFields.add("device_type");
    openapiFields.add("device_role");
    openapiFields.add("tenant");
    openapiFields.add("platform");
    openapiFields.add("serial");
    openapiFields.add("asset_tag");
    openapiFields.add("site");
    openapiFields.add("location");
    openapiFields.add("rack");
    openapiFields.add("position");
    openapiFields.add("face");
    openapiFields.add("parent_device");
    openapiFields.add("status");
    openapiFields.add("airflow");
    openapiFields.add("primary_ip");
    openapiFields.add("primary_ip4");
    openapiFields.add("primary_ip6");
    openapiFields.add("cluster");
    openapiFields.add("virtual_chassis");
    openapiFields.add("vc_position");
    openapiFields.add("vc_priority");
    openapiFields.add("comments");
    openapiFields.add("local_context_data");
    openapiFields.add("tags");
    openapiFields.add("custom_fields");
    openapiFields.add("config_context");
    openapiFields.add("created");
    openapiFields.add("last_updated");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("device_type");
    openapiRequiredFields.add("device_role");
    openapiRequiredFields.add("tenant");
    openapiRequiredFields.add("site");
    openapiRequiredFields.add("rack");
    openapiRequiredFields.add("face");
    openapiRequiredFields.add("virtual_chassis");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WritableDeviceWithConfigContext
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (WritableDeviceWithConfigContext.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in WritableDeviceWithConfigContext is not found in the empty JSON string", WritableDeviceWithConfigContext.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WritableDeviceWithConfigContext.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WritableDeviceWithConfigContext` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WritableDeviceWithConfigContext.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("url") != null && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if (jsonObj.get("display") != null && !jsonObj.get("display").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("serial") != null && !jsonObj.get("serial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serial").toString()));
      }
      if (jsonObj.get("asset_tag") != null && !jsonObj.get("asset_tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asset_tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_tag").toString()));
      }
      if (jsonObj.get("face") != null && !jsonObj.get("face").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `face` to be a primitive type in the JSON string but got `%s`", jsonObj.get("face").toString()));
      }
      // validate the optional field `parent_device`
      if (jsonObj.getAsJsonObject("parent_device") != null) {
        NestedDevice.validateJsonObject(jsonObj.getAsJsonObject("parent_device"));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("airflow") != null && !jsonObj.get("airflow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `airflow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("airflow").toString()));
      }
      if (jsonObj.get("primary_ip") != null && !jsonObj.get("primary_ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_ip").toString()));
      }
      if (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (jsonObj.get("local_context_data") != null && !jsonObj.get("local_context_data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `local_context_data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("local_context_data").toString()));
      }
      JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
      if (jsonArraytags != null) {
        // ensure the json data is an array
        if (!jsonObj.get("tags").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
        }

        // validate the optional field `tags` (array)
        for (int i = 0; i < jsonArraytags.size(); i++) {
          NestedTag.validateJsonObject(jsonArraytags.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WritableDeviceWithConfigContext.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WritableDeviceWithConfigContext' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WritableDeviceWithConfigContext> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WritableDeviceWithConfigContext.class));

       return (TypeAdapter<T>) new TypeAdapter<WritableDeviceWithConfigContext>() {
           @Override
           public void write(JsonWriter out, WritableDeviceWithConfigContext value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WritableDeviceWithConfigContext read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WritableDeviceWithConfigContext given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WritableDeviceWithConfigContext
  * @throws IOException if the JSON string is invalid with respect to WritableDeviceWithConfigContext
  */
  public static WritableDeviceWithConfigContext fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WritableDeviceWithConfigContext.class);
  }

 /**
  * Convert an instance of WritableDeviceWithConfigContext to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

