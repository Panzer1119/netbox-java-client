/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.codemakers.netbox.client.JSON;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.*;
import java.util.Map.Entry;

/**
 * ModelInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-29T15:14:28.278845400+02:00[Europe/Berlin]")
public class ModelInterface {
    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;
    
    public static final String SERIALIZED_NAME_URL = "url";
    @SerializedName(SERIALIZED_NAME_URL)
    private URI url;
    
    public static final String SERIALIZED_NAME_DISPLAY = "display";
    @SerializedName(SERIALIZED_NAME_DISPLAY)
    private String display;
    
    public static final String SERIALIZED_NAME_DEVICE = "device";
    @SerializedName(SERIALIZED_NAME_DEVICE)
    private NestedDevice device;
    
    public static final String SERIALIZED_NAME_MODULE = "module";
    @SerializedName(SERIALIZED_NAME_MODULE)
    private ComponentNestedModule module;
    
    public static final String SERIALIZED_NAME_NAME = "name";
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    
    public static final String SERIALIZED_NAME_LABEL = "label";
    @SerializedName(SERIALIZED_NAME_LABEL)
    private String label;
    
    public static final String SERIALIZED_NAME_TYPE = "type";
    @SerializedName(SERIALIZED_NAME_TYPE)
    private Type2 type;
    
    public static final String SERIALIZED_NAME_ENABLED = "enabled";
    @SerializedName(SERIALIZED_NAME_ENABLED)
    private Boolean enabled;
    
    public static final String SERIALIZED_NAME_PARENT = "parent";
    @SerializedName(SERIALIZED_NAME_PARENT)
    private NestedInterface parent;
    
    public static final String SERIALIZED_NAME_BRIDGE = "bridge";
    @SerializedName(SERIALIZED_NAME_BRIDGE)
    private NestedInterface bridge;
    
    public static final String SERIALIZED_NAME_LAG = "lag";
    @SerializedName(SERIALIZED_NAME_LAG)
    private NestedInterface lag;
    
    public static final String SERIALIZED_NAME_MTU = "mtu";
    @SerializedName(SERIALIZED_NAME_MTU)
    private Integer mtu;
    
    public static final String SERIALIZED_NAME_MAC_ADDRESS = "mac_address";
    @SerializedName(SERIALIZED_NAME_MAC_ADDRESS)
    private String macAddress;
    
    public static final String SERIALIZED_NAME_SPEED = "speed";
    @SerializedName(SERIALIZED_NAME_SPEED)
    private Integer speed;
    
    public static final String SERIALIZED_NAME_DUPLEX = "duplex";
    @SerializedName(SERIALIZED_NAME_DUPLEX)
    private Duplex duplex;
    
    public static final String SERIALIZED_NAME_WWN = "wwn";
    @SerializedName(SERIALIZED_NAME_WWN)
    private String wwn;
    
    public static final String SERIALIZED_NAME_MGMT_ONLY = "mgmt_only";
    @SerializedName(SERIALIZED_NAME_MGMT_ONLY)
    private Boolean mgmtOnly;
    
    public static final String SERIALIZED_NAME_DESCRIPTION = "description";
    @SerializedName(SERIALIZED_NAME_DESCRIPTION)
    private String description;
    
    public static final String SERIALIZED_NAME_MODE = "mode";
    @SerializedName(SERIALIZED_NAME_MODE)
    private Mode mode;
    
    public static final String SERIALIZED_NAME_RF_ROLE = "rf_role";
    @SerializedName(SERIALIZED_NAME_RF_ROLE)
    private RfRole rfRole;
    
    public static final String SERIALIZED_NAME_RF_CHANNEL = "rf_channel";
    @SerializedName(SERIALIZED_NAME_RF_CHANNEL)
    private RfChannel rfChannel;
    
    public static final String SERIALIZED_NAME_POE_MODE = "poe_mode";
    @SerializedName(SERIALIZED_NAME_POE_MODE)
    private PoeMode poeMode;
    
    public static final String SERIALIZED_NAME_POE_TYPE = "poe_type";
    @SerializedName(SERIALIZED_NAME_POE_TYPE)
    private PoeType poeType;
    
    public static final String SERIALIZED_NAME_RF_CHANNEL_FREQUENCY = "rf_channel_frequency";
    @SerializedName(SERIALIZED_NAME_RF_CHANNEL_FREQUENCY)
    private BigDecimal rfChannelFrequency;
    
    public static final String SERIALIZED_NAME_RF_CHANNEL_WIDTH = "rf_channel_width";
    @SerializedName(SERIALIZED_NAME_RF_CHANNEL_WIDTH)
    private BigDecimal rfChannelWidth;
    
    public static final String SERIALIZED_NAME_TX_POWER = "tx_power";
    @SerializedName(SERIALIZED_NAME_TX_POWER)
    private Integer txPower;
    
    public static final String SERIALIZED_NAME_UNTAGGED_VLAN = "untagged_vlan";
    @SerializedName(SERIALIZED_NAME_UNTAGGED_VLAN)
    private NestedVLAN untaggedVlan;
    
    public static final String SERIALIZED_NAME_TAGGED_VLANS = "tagged_vlans";
    @SerializedName(SERIALIZED_NAME_TAGGED_VLANS)
    private Set<NestedVLAN> taggedVlans = null;
    
    public static final String SERIALIZED_NAME_MARK_CONNECTED = "mark_connected";
    @SerializedName(SERIALIZED_NAME_MARK_CONNECTED)
    private Boolean markConnected;
    
    public static final String SERIALIZED_NAME_CABLE = "cable";
    @SerializedName(SERIALIZED_NAME_CABLE)
    private NestedCable cable;
    
    public static final String SERIALIZED_NAME_CABLE_END = "cable_end";
    @SerializedName(SERIALIZED_NAME_CABLE_END)
    private String cableEnd;
    
    public static final String SERIALIZED_NAME_WIRELESS_LINK = "wireless_link";
    @SerializedName(SERIALIZED_NAME_WIRELESS_LINK)
    private NestedWirelessLink wirelessLink;
    
    public static final String SERIALIZED_NAME_LINK_PEERS = "link_peers";
    @SerializedName(SERIALIZED_NAME_LINK_PEERS)
    private List<String> linkPeers = null;
    
    public static final String SERIALIZED_NAME_LINK_PEERS_TYPE = "link_peers_type";
    @SerializedName(SERIALIZED_NAME_LINK_PEERS_TYPE)
    private String linkPeersType;
    
    public static final String SERIALIZED_NAME_WIRELESS_LANS = "wireless_lans";
    @SerializedName(SERIALIZED_NAME_WIRELESS_LANS)
    private Set<NestedWirelessLAN> wirelessLans = null;
    
    public static final String SERIALIZED_NAME_VRF = "vrf";
    @SerializedName(SERIALIZED_NAME_VRF)
    private NestedVRF vrf;
    
    public static final String SERIALIZED_NAME_L2VPN_TERMINATION = "l2vpn_termination";
    @SerializedName(SERIALIZED_NAME_L2VPN_TERMINATION)
    private NestedL2VPNTermination l2vpnTermination;
    
    public static final String SERIALIZED_NAME_CONNECTED_ENDPOINTS = "connected_endpoints";
    @SerializedName(SERIALIZED_NAME_CONNECTED_ENDPOINTS)
    private List<String> connectedEndpoints = null;
    
    public static final String SERIALIZED_NAME_CONNECTED_ENDPOINTS_TYPE = "connected_endpoints_type";
    @SerializedName(SERIALIZED_NAME_CONNECTED_ENDPOINTS_TYPE)
    private String connectedEndpointsType;
    
    public static final String SERIALIZED_NAME_CONNECTED_ENDPOINTS_REACHABLE = "connected_endpoints_reachable";
    @SerializedName(SERIALIZED_NAME_CONNECTED_ENDPOINTS_REACHABLE)
    private Boolean connectedEndpointsReachable;
    
    public static final String SERIALIZED_NAME_TAGS = "tags";
    @SerializedName(SERIALIZED_NAME_TAGS)
    private List<NestedTag> tags = null;
    
    public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
    @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
    private Object customFields;
    
    public static final String SERIALIZED_NAME_CREATED = "created";
    @SerializedName(SERIALIZED_NAME_CREATED)
    private OffsetDateTime created;
    
    public static final String SERIALIZED_NAME_LAST_UPDATED = "last_updated";
    @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
    private OffsetDateTime lastUpdated;
    
    public static final String SERIALIZED_NAME_COUNT_IPADDRESSES = "count_ipaddresses";
    @SerializedName(SERIALIZED_NAME_COUNT_IPADDRESSES)
    private Integer countIpaddresses;
    
    public static final String SERIALIZED_NAME_COUNT_FHRP_GROUPS = "count_fhrp_groups";
    @SerializedName(SERIALIZED_NAME_COUNT_FHRP_GROUPS)
    private Integer countFhrpGroups;
    
    public static final String SERIALIZED_NAME_OCCUPIED = "_occupied";
    @SerializedName(SERIALIZED_NAME_OCCUPIED)
    private Boolean occupied;
    
    public ModelInterface() {
    }
    
    
    public ModelInterface(Integer id, URI url, String display, String cableEnd, List<String> linkPeers, String linkPeersType, List<String> connectedEndpoints, String connectedEndpointsType, Boolean connectedEndpointsReachable, OffsetDateTime created, OffsetDateTime lastUpdated, Integer countIpaddresses, Integer countFhrpGroups, Boolean occupied) {
        this();
        this.id = id;
        this.url = url;
        this.display = display;
        this.cableEnd = cableEnd;
        this.linkPeers = linkPeers;
        this.linkPeersType = linkPeersType;
        this.connectedEndpoints = connectedEndpoints;
        this.connectedEndpointsType = connectedEndpointsType;
        this.connectedEndpointsReachable = connectedEndpointsReachable;
        this.created = created;
        this.lastUpdated = lastUpdated;
        this.countIpaddresses = countIpaddresses;
        this.countFhrpGroups = countFhrpGroups;
        this.occupied = occupied;
    }
    
    /**
     * Get id
     *
     * @return id
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Integer getId() {
        return id;
    }
    
    
    /**
     * Get url
     *
     * @return url
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public URI getUrl() {
        return url;
    }
    
    
    /**
     * Get display
     *
     * @return display
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public String getDisplay() {
        return display;
    }
    
    
    public ModelInterface device(NestedDevice device) {
        
        this.device = device;
        return this;
    }
    
    /**
     * Get device
     *
     * @return device
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    
    public NestedDevice getDevice() {
        return device;
    }
    
    
    public void setDevice(NestedDevice device) {
        this.device = device;
    }
    
    
    public ModelInterface module(ComponentNestedModule module) {
        
        this.module = module;
        return this;
    }
    
    /**
     * Get module
     *
     * @return module
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public ComponentNestedModule getModule() {
        return module;
    }
    
    
    public void setModule(ComponentNestedModule module) {
        this.module = module;
    }
    
    
    public ModelInterface name(String name) {
        
        this.name = name;
        return this;
    }
    
    /**
     * Get name
     *
     * @return name
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    
    public String getName() {
        return name;
    }
    
    
    public void setName(String name) {
        this.name = name;
    }
    
    
    public ModelInterface label(String label) {
        
        this.label = label;
        return this;
    }
    
    /**
     * Physical label
     *
     * @return label
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Physical label")
    
    public String getLabel() {
        return label;
    }
    
    
    public void setLabel(String label) {
        this.label = label;
    }
    
    
    public ModelInterface type(Type2 type) {
        
        this.type = type;
        return this;
    }
    
    /**
     * Get type
     *
     * @return type
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    
    public Type2 getType() {
        return type;
    }
    
    
    public void setType(Type2 type) {
        this.type = type;
    }
    
    
    public ModelInterface enabled(Boolean enabled) {
        
        this.enabled = enabled;
        return this;
    }
    
    /**
     * Get enabled
     *
     * @return enabled
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Boolean getEnabled() {
        return enabled;
    }
    
    
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }
    
    
    public ModelInterface parent(NestedInterface parent) {
        
        this.parent = parent;
        return this;
    }
    
    /**
     * Get parent
     *
     * @return parent
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedInterface getParent() {
        return parent;
    }
    
    
    public void setParent(NestedInterface parent) {
        this.parent = parent;
    }
    
    
    public ModelInterface bridge(NestedInterface bridge) {
        
        this.bridge = bridge;
        return this;
    }
    
    /**
     * Get bridge
     *
     * @return bridge
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedInterface getBridge() {
        return bridge;
    }
    
    
    public void setBridge(NestedInterface bridge) {
        this.bridge = bridge;
    }
    
    
    public ModelInterface lag(NestedInterface lag) {
        
        this.lag = lag;
        return this;
    }
    
    /**
     * Get lag
     *
     * @return lag
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedInterface getLag() {
        return lag;
    }
    
    
    public void setLag(NestedInterface lag) {
        this.lag = lag;
    }
    
    
    public ModelInterface mtu(Integer mtu) {
        
        this.mtu = mtu;
        return this;
    }
    
    /**
     * Get mtu
     * minimum: 1
     * maximum: 65536
     *
     * @return mtu
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Integer getMtu() {
        return mtu;
    }
    
    
    public void setMtu(Integer mtu) {
        this.mtu = mtu;
    }
    
    
    public ModelInterface macAddress(String macAddress) {
        
        this.macAddress = macAddress;
        return this;
    }
    
    /**
     * Get macAddress
     *
     * @return macAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public String getMacAddress() {
        return macAddress;
    }
    
    
    public void setMacAddress(String macAddress) {
        this.macAddress = macAddress;
    }
    
    
    public ModelInterface speed(Integer speed) {
        
        this.speed = speed;
        return this;
    }
    
    /**
     * Get speed
     * minimum: 0
     * maximum: 2147483647
     *
     * @return speed
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Integer getSpeed() {
        return speed;
    }
    
    
    public void setSpeed(Integer speed) {
        this.speed = speed;
    }
    
    
    public ModelInterface duplex(Duplex duplex) {
        
        this.duplex = duplex;
        return this;
    }
    
    /**
     * Get duplex
     *
     * @return duplex
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Duplex getDuplex() {
        return duplex;
    }
    
    
    public void setDuplex(Duplex duplex) {
        this.duplex = duplex;
    }
    
    
    public ModelInterface wwn(String wwn) {
        
        this.wwn = wwn;
        return this;
    }
    
    /**
     * 64-bit World Wide Name
     *
     * @return wwn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "64-bit World Wide Name")
    
    public String getWwn() {
        return wwn;
    }
    
    
    public void setWwn(String wwn) {
        this.wwn = wwn;
    }
    
    
    public ModelInterface mgmtOnly(Boolean mgmtOnly) {
        
        this.mgmtOnly = mgmtOnly;
        return this;
    }
    
    /**
     * This interface is used only for out-of-band management
     *
     * @return mgmtOnly
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "This interface is used only for out-of-band management")
    
    public Boolean getMgmtOnly() {
        return mgmtOnly;
    }
    
    
    public void setMgmtOnly(Boolean mgmtOnly) {
        this.mgmtOnly = mgmtOnly;
    }
    
    
    public ModelInterface description(String description) {
        
        this.description = description;
        return this;
    }
    
    /**
     * Get description
     *
     * @return description
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public String getDescription() {
        return description;
    }
    
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    
    public ModelInterface mode(Mode mode) {
        
        this.mode = mode;
        return this;
    }
    
    /**
     * Get mode
     *
     * @return mode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Mode getMode() {
        return mode;
    }
    
    
    public void setMode(Mode mode) {
        this.mode = mode;
    }
    
    
    public ModelInterface rfRole(RfRole rfRole) {
        
        this.rfRole = rfRole;
        return this;
    }
    
    /**
     * Get rfRole
     *
     * @return rfRole
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public RfRole getRfRole() {
        return rfRole;
    }
    
    
    public void setRfRole(RfRole rfRole) {
        this.rfRole = rfRole;
    }
    
    
    public ModelInterface rfChannel(RfChannel rfChannel) {
        
        this.rfChannel = rfChannel;
        return this;
    }
    
    /**
     * Get rfChannel
     *
     * @return rfChannel
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public RfChannel getRfChannel() {
        return rfChannel;
    }
    
    
    public void setRfChannel(RfChannel rfChannel) {
        this.rfChannel = rfChannel;
    }
    
    
    public ModelInterface poeMode(PoeMode poeMode) {
        
        this.poeMode = poeMode;
        return this;
    }
    
    /**
     * Get poeMode
     *
     * @return poeMode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public PoeMode getPoeMode() {
        return poeMode;
    }
    
    
    public void setPoeMode(PoeMode poeMode) {
        this.poeMode = poeMode;
    }
    
    
    public ModelInterface poeType(PoeType poeType) {
        
        this.poeType = poeType;
        return this;
    }
    
    /**
     * Get poeType
     *
     * @return poeType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public PoeType getPoeType() {
        return poeType;
    }
    
    
    public void setPoeType(PoeType poeType) {
        this.poeType = poeType;
    }
    
    
    public ModelInterface rfChannelFrequency(BigDecimal rfChannelFrequency) {
        
        this.rfChannelFrequency = rfChannelFrequency;
        return this;
    }
    
    /**
     * Get rfChannelFrequency
     *
     * @return rfChannelFrequency
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public BigDecimal getRfChannelFrequency() {
        return rfChannelFrequency;
    }
    
    
    public void setRfChannelFrequency(BigDecimal rfChannelFrequency) {
        this.rfChannelFrequency = rfChannelFrequency;
    }
    
    
    public ModelInterface rfChannelWidth(BigDecimal rfChannelWidth) {
        
        this.rfChannelWidth = rfChannelWidth;
        return this;
    }
    
    /**
     * Get rfChannelWidth
     *
     * @return rfChannelWidth
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public BigDecimal getRfChannelWidth() {
        return rfChannelWidth;
    }
    
    
    public void setRfChannelWidth(BigDecimal rfChannelWidth) {
        this.rfChannelWidth = rfChannelWidth;
    }
    
    
    public ModelInterface txPower(Integer txPower) {
        
        this.txPower = txPower;
        return this;
    }
    
    /**
     * Get txPower
     * minimum: 0
     * maximum: 127
     *
     * @return txPower
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Integer getTxPower() {
        return txPower;
    }
    
    
    public void setTxPower(Integer txPower) {
        this.txPower = txPower;
    }
    
    
    public ModelInterface untaggedVlan(NestedVLAN untaggedVlan) {
        
        this.untaggedVlan = untaggedVlan;
        return this;
    }
    
    /**
     * Get untaggedVlan
     *
     * @return untaggedVlan
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedVLAN getUntaggedVlan() {
        return untaggedVlan;
    }
    
    
    public void setUntaggedVlan(NestedVLAN untaggedVlan) {
        this.untaggedVlan = untaggedVlan;
    }
    
    
    public ModelInterface taggedVlans(Set<NestedVLAN> taggedVlans) {
        
        this.taggedVlans = taggedVlans;
        return this;
    }
    
    public ModelInterface addTaggedVlansItem(NestedVLAN taggedVlansItem) {
        if (this.taggedVlans == null) {
            this.taggedVlans = new LinkedHashSet<>();
        }
        this.taggedVlans.add(taggedVlansItem);
        return this;
    }
    
    /**
     * Get taggedVlans
     *
     * @return taggedVlans
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Set<NestedVLAN> getTaggedVlans() {
        return taggedVlans;
    }
    
    
    public void setTaggedVlans(Set<NestedVLAN> taggedVlans) {
        this.taggedVlans = taggedVlans;
    }
    
    
    public ModelInterface markConnected(Boolean markConnected) {
        
        this.markConnected = markConnected;
        return this;
    }
    
    /**
     * Treat as if a cable is connected
     *
     * @return markConnected
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Treat as if a cable is connected")
    
    public Boolean getMarkConnected() {
        return markConnected;
    }
    
    
    public void setMarkConnected(Boolean markConnected) {
        this.markConnected = markConnected;
    }
    
    
    public ModelInterface cable(NestedCable cable) {
        
        this.cable = cable;
        return this;
    }
    
    /**
     * Get cable
     *
     * @return cable
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedCable getCable() {
        return cable;
    }
    
    
    public void setCable(NestedCable cable) {
        this.cable = cable;
    }
    
    
    /**
     * Get cableEnd
     *
     * @return cableEnd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public String getCableEnd() {
        return cableEnd;
    }
    
    
    public ModelInterface wirelessLink(NestedWirelessLink wirelessLink) {
        
        this.wirelessLink = wirelessLink;
        return this;
    }
    
    /**
     * Get wirelessLink
     *
     * @return wirelessLink
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedWirelessLink getWirelessLink() {
        return wirelessLink;
    }
    
    
    public void setWirelessLink(NestedWirelessLink wirelessLink) {
        this.wirelessLink = wirelessLink;
    }
    
    
    /**
     * Return the appropriate serializer for the link termination model.
     *
     * @return linkPeers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = " Return the appropriate serializer for the link termination model. ")
    
    public List<String> getLinkPeers() {
        return linkPeers;
    }
    
    
    /**
     * Get linkPeersType
     *
     * @return linkPeersType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public String getLinkPeersType() {
        return linkPeersType;
    }
    
    
    public ModelInterface wirelessLans(Set<NestedWirelessLAN> wirelessLans) {
        
        this.wirelessLans = wirelessLans;
        return this;
    }
    
    public ModelInterface addWirelessLansItem(NestedWirelessLAN wirelessLansItem) {
        if (this.wirelessLans == null) {
            this.wirelessLans = new LinkedHashSet<>();
        }
        this.wirelessLans.add(wirelessLansItem);
        return this;
    }
    
    /**
     * Get wirelessLans
     *
     * @return wirelessLans
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Set<NestedWirelessLAN> getWirelessLans() {
        return wirelessLans;
    }
    
    
    public void setWirelessLans(Set<NestedWirelessLAN> wirelessLans) {
        this.wirelessLans = wirelessLans;
    }
    
    
    public ModelInterface vrf(NestedVRF vrf) {
        
        this.vrf = vrf;
        return this;
    }
    
    /**
     * Get vrf
     *
     * @return vrf
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedVRF getVrf() {
        return vrf;
    }
    
    
    public void setVrf(NestedVRF vrf) {
        this.vrf = vrf;
    }
    
    
    public ModelInterface l2vpnTermination(NestedL2VPNTermination l2vpnTermination) {
        
        this.l2vpnTermination = l2vpnTermination;
        return this;
    }
    
    /**
     * Get l2vpnTermination
     *
     * @return l2vpnTermination
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedL2VPNTermination getL2vpnTermination() {
        return l2vpnTermination;
    }
    
    
    public void setL2vpnTermination(NestedL2VPNTermination l2vpnTermination) {
        this.l2vpnTermination = l2vpnTermination;
    }
    
    
    /**
     * Return the appropriate serializer for the type of connected object.
     *
     * @return connectedEndpoints
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = " Return the appropriate serializer for the type of connected object. ")
    
    public List<String> getConnectedEndpoints() {
        return connectedEndpoints;
    }
    
    
    /**
     * Get connectedEndpointsType
     *
     * @return connectedEndpointsType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public String getConnectedEndpointsType() {
        return connectedEndpointsType;
    }
    
    
    /**
     * Get connectedEndpointsReachable
     *
     * @return connectedEndpointsReachable
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Boolean getConnectedEndpointsReachable() {
        return connectedEndpointsReachable;
    }
    
    
    public ModelInterface tags(List<NestedTag> tags) {
        
        this.tags = tags;
        return this;
    }
    
    public ModelInterface addTagsItem(NestedTag tagsItem) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tagsItem);
        return this;
    }
    
    /**
     * Get tags
     *
     * @return tags
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public List<NestedTag> getTags() {
        return tags;
    }
    
    
    public void setTags(List<NestedTag> tags) {
        this.tags = tags;
    }
    
    
    public ModelInterface customFields(Object customFields) {
        
        this.customFields = customFields;
        return this;
    }
    
    /**
     * Get customFields
     *
     * @return customFields
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Object getCustomFields() {
        return customFields;
    }
    
    
    public void setCustomFields(Object customFields) {
        this.customFields = customFields;
    }
    
    
    /**
     * Get created
     *
     * @return created
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public OffsetDateTime getCreated() {
        return created;
    }
    
    
    /**
     * Get lastUpdated
     *
     * @return lastUpdated
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public OffsetDateTime getLastUpdated() {
        return lastUpdated;
    }
    
    
    /**
     * Get countIpaddresses
     *
     * @return countIpaddresses
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Integer getCountIpaddresses() {
        return countIpaddresses;
    }
    
    
    /**
     * Get countFhrpGroups
     *
     * @return countFhrpGroups
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Integer getCountFhrpGroups() {
        return countFhrpGroups;
    }
    
    
    /**
     * Get occupied
     *
     * @return occupied
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Boolean getOccupied() {
        return occupied;
    }
    
    
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ModelInterface _interface = (ModelInterface) o;
        return Objects.equals(this.id, _interface.id) && Objects.equals(this.url, _interface.url) && Objects.equals(this.display, _interface.display) && Objects.equals(this.device, _interface.device) && Objects.equals(this.module, _interface.module) && Objects.equals(this.name, _interface.name) && Objects.equals(this.label, _interface.label) && Objects.equals(this.type, _interface.type) && Objects.equals(this.enabled, _interface.enabled) && Objects.equals(this.parent, _interface.parent) && Objects.equals(this.bridge, _interface.bridge) && Objects.equals(this.lag, _interface.lag) && Objects.equals(this.mtu, _interface.mtu) && Objects.equals(this.macAddress, _interface.macAddress) && Objects.equals(this.speed, _interface.speed) && Objects.equals(this.duplex, _interface.duplex) && Objects.equals(this.wwn, _interface.wwn) && Objects.equals(this.mgmtOnly, _interface.mgmtOnly) && Objects.equals(this.description, _interface.description) && Objects.equals(this.mode, _interface.mode) && Objects.equals(this.rfRole, _interface.rfRole) && Objects.equals(this.rfChannel, _interface.rfChannel) && Objects.equals(this.poeMode, _interface.poeMode) && Objects.equals(this.poeType, _interface.poeType) && Objects.equals(this.rfChannelFrequency, _interface.rfChannelFrequency) && Objects.equals(this.rfChannelWidth, _interface.rfChannelWidth) && Objects.equals(this.txPower, _interface.txPower) && Objects.equals(this.untaggedVlan, _interface.untaggedVlan) && Objects.equals(this.taggedVlans, _interface.taggedVlans) && Objects.equals(this.markConnected, _interface.markConnected) && Objects.equals(this.cable, _interface.cable) && Objects.equals(this.cableEnd, _interface.cableEnd) && Objects.equals(this.wirelessLink, _interface.wirelessLink) && Objects.equals(this.linkPeers, _interface.linkPeers) && Objects.equals(this.linkPeersType, _interface.linkPeersType) && Objects.equals(this.wirelessLans, _interface.wirelessLans) && Objects.equals(this.vrf, _interface.vrf) && Objects.equals(this.l2vpnTermination, _interface.l2vpnTermination) && Objects.equals(this.connectedEndpoints, _interface.connectedEndpoints) && Objects.equals(this.connectedEndpointsType, _interface.connectedEndpointsType) && Objects.equals(this.connectedEndpointsReachable, _interface.connectedEndpointsReachable) && Objects.equals(this.tags, _interface.tags) && Objects.equals(this.customFields, _interface.customFields) && Objects.equals(this.created, _interface.created) && Objects.equals(this.lastUpdated, _interface.lastUpdated) && Objects.equals(this.countIpaddresses, _interface.countIpaddresses) && Objects.equals(this.countFhrpGroups, _interface.countFhrpGroups) && Objects.equals(this.occupied, _interface.occupied);
    }
    
    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(id, url, display, device, module, name, label, type, enabled, parent, bridge, lag, mtu, macAddress, speed, duplex, wwn, mgmtOnly, description, mode, rfRole, rfChannel, poeMode, poeType, rfChannelFrequency, rfChannelWidth, txPower, untaggedVlan, taggedVlans, markConnected, cable, cableEnd, wirelessLink, linkPeers, linkPeersType, wirelessLans, vrf, l2vpnTermination, connectedEndpoints, connectedEndpointsType, connectedEndpointsReachable, tags, customFields, created, lastUpdated, countIpaddresses, countFhrpGroups, occupied);
    }
    
    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
    }
    
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ModelInterface {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    display: ").append(toIndentedString(display)).append("\n");
        sb.append("    device: ").append(toIndentedString(device)).append("\n");
        sb.append("    module: ").append(toIndentedString(module)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    label: ").append(toIndentedString(label)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
        sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
        sb.append("    bridge: ").append(toIndentedString(bridge)).append("\n");
        sb.append("    lag: ").append(toIndentedString(lag)).append("\n");
        sb.append("    mtu: ").append(toIndentedString(mtu)).append("\n");
        sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
        sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
        sb.append("    duplex: ").append(toIndentedString(duplex)).append("\n");
        sb.append("    wwn: ").append(toIndentedString(wwn)).append("\n");
        sb.append("    mgmtOnly: ").append(toIndentedString(mgmtOnly)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
        sb.append("    rfRole: ").append(toIndentedString(rfRole)).append("\n");
        sb.append("    rfChannel: ").append(toIndentedString(rfChannel)).append("\n");
        sb.append("    poeMode: ").append(toIndentedString(poeMode)).append("\n");
        sb.append("    poeType: ").append(toIndentedString(poeType)).append("\n");
        sb.append("    rfChannelFrequency: ").append(toIndentedString(rfChannelFrequency)).append("\n");
        sb.append("    rfChannelWidth: ").append(toIndentedString(rfChannelWidth)).append("\n");
        sb.append("    txPower: ").append(toIndentedString(txPower)).append("\n");
        sb.append("    untaggedVlan: ").append(toIndentedString(untaggedVlan)).append("\n");
        sb.append("    taggedVlans: ").append(toIndentedString(taggedVlans)).append("\n");
        sb.append("    markConnected: ").append(toIndentedString(markConnected)).append("\n");
        sb.append("    cable: ").append(toIndentedString(cable)).append("\n");
        sb.append("    cableEnd: ").append(toIndentedString(cableEnd)).append("\n");
        sb.append("    wirelessLink: ").append(toIndentedString(wirelessLink)).append("\n");
        sb.append("    linkPeers: ").append(toIndentedString(linkPeers)).append("\n");
        sb.append("    linkPeersType: ").append(toIndentedString(linkPeersType)).append("\n");
        sb.append("    wirelessLans: ").append(toIndentedString(wirelessLans)).append("\n");
        sb.append("    vrf: ").append(toIndentedString(vrf)).append("\n");
        sb.append("    l2vpnTermination: ").append(toIndentedString(l2vpnTermination)).append("\n");
        sb.append("    connectedEndpoints: ").append(toIndentedString(connectedEndpoints)).append("\n");
        sb.append("    connectedEndpointsType: ").append(toIndentedString(connectedEndpointsType)).append("\n");
        sb.append("    connectedEndpointsReachable: ").append(toIndentedString(connectedEndpointsReachable)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
        sb.append("    created: ").append(toIndentedString(created)).append("\n");
        sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
        sb.append("    countIpaddresses: ").append(toIndentedString(countIpaddresses)).append("\n");
        sb.append("    countFhrpGroups: ").append(toIndentedString(countFhrpGroups)).append("\n");
        sb.append("    occupied: ").append(toIndentedString(occupied)).append("\n");
        sb.append("}");
        return sb.toString();
    }
    
    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
    
    
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;
    
    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("id");
        openapiFields.add("url");
        openapiFields.add("display");
        openapiFields.add("device");
        openapiFields.add("module");
        openapiFields.add("name");
        openapiFields.add("label");
        openapiFields.add("type");
        openapiFields.add("enabled");
        openapiFields.add("parent");
        openapiFields.add("bridge");
        openapiFields.add("lag");
        openapiFields.add("mtu");
        openapiFields.add("mac_address");
        openapiFields.add("speed");
        openapiFields.add("duplex");
        openapiFields.add("wwn");
        openapiFields.add("mgmt_only");
        openapiFields.add("description");
        openapiFields.add("mode");
        openapiFields.add("rf_role");
        openapiFields.add("rf_channel");
        openapiFields.add("poe_mode");
        openapiFields.add("poe_type");
        openapiFields.add("rf_channel_frequency");
        openapiFields.add("rf_channel_width");
        openapiFields.add("tx_power");
        openapiFields.add("untagged_vlan");
        openapiFields.add("tagged_vlans");
        openapiFields.add("mark_connected");
        openapiFields.add("cable");
        openapiFields.add("cable_end");
        openapiFields.add("wireless_link");
        openapiFields.add("link_peers");
        openapiFields.add("link_peers_type");
        openapiFields.add("wireless_lans");
        openapiFields.add("vrf");
        openapiFields.add("l2vpn_termination");
        openapiFields.add("connected_endpoints");
        openapiFields.add("connected_endpoints_type");
        openapiFields.add("connected_endpoints_reachable");
        openapiFields.add("tags");
        openapiFields.add("custom_fields");
        openapiFields.add("created");
        openapiFields.add("last_updated");
        openapiFields.add("count_ipaddresses");
        openapiFields.add("count_fhrp_groups");
        openapiFields.add("_occupied");
        
        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
        openapiRequiredFields.add("device");
        openapiRequiredFields.add("name");
        openapiRequiredFields.add("type");
    }
    
    /**
     * Validates the JSON Object and throws an exception if issues found
     *
     * @param jsonObj JSON Object
     *
     * @throws IOException if the JSON Object is invalid with respect to ModelInterface
     */
    public static void validateJsonObject(JsonObject jsonObj) throws IOException {
        if (jsonObj == null) {
            if (ModelInterface.openapiRequiredFields.isEmpty()) {
                return;
            } else { // has required fields
                throw new IllegalArgumentException(String.format("The required field(s) %s in ModelInterface is not found in the empty JSON string", ModelInterface.openapiRequiredFields.toString()));
            }
        }
        
        Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
        // check to see if the JSON string contains additional fields
        for (Entry<String, JsonElement> entry : entries) {
            if (!ModelInterface.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelInterface` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
            }
        }
        
        // check to make sure all required properties/fields are present in the JSON string
        for (String requiredField : ModelInterface.openapiRequiredFields) {
            if (jsonObj.get(requiredField) == null) {
                throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
            }
        }
        if (jsonObj.get("url") != null && !jsonObj.get("url").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url")
                    .toString()));
        }
        if (jsonObj.get("display") != null && !jsonObj.get("display").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `display` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display")
                    .toString()));
        }
        // validate the optional field `device`
        if (jsonObj.getAsJsonObject("device") != null) {
            NestedDevice.validateJsonObject(jsonObj.getAsJsonObject("device"));
        }
        // validate the optional field `module`
        if (jsonObj.getAsJsonObject("module") != null) {
            ComponentNestedModule.validateJsonObject(jsonObj.getAsJsonObject("module"));
        }
        if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name")
                    .toString()));
        }
        if (jsonObj.get("label") != null && !jsonObj.get("label").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label")
                    .toString()));
        }
        // validate the optional field `type`
        if (jsonObj.getAsJsonObject("type") != null) {
            Type2.validateJsonObject(jsonObj.getAsJsonObject("type"));
        }
        // validate the optional field `parent`
        if (jsonObj.getAsJsonObject("parent") != null) {
            NestedInterface.validateJsonObject(jsonObj.getAsJsonObject("parent"));
        }
        // validate the optional field `bridge`
        if (jsonObj.getAsJsonObject("bridge") != null) {
            NestedInterface.validateJsonObject(jsonObj.getAsJsonObject("bridge"));
        }
        // validate the optional field `lag`
        if (jsonObj.getAsJsonObject("lag") != null) {
            NestedInterface.validateJsonObject(jsonObj.getAsJsonObject("lag"));
        }
        if (jsonObj.get("mac_address") != null && !jsonObj.get("mac_address").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `mac_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mac_address")
                    .toString()));
        }
        // validate the optional field `duplex`
        if (jsonObj.getAsJsonObject("duplex") != null) {
            Duplex.validateJsonObject(jsonObj.getAsJsonObject("duplex"));
        }
        if (jsonObj.get("wwn") != null && !jsonObj.get("wwn").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `wwn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wwn")
                    .toString()));
        }
        if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description")
                    .toString()));
        }
        // validate the optional field `mode`
        if (jsonObj.getAsJsonObject("mode") != null) {
            Mode.validateJsonObject(jsonObj.getAsJsonObject("mode"));
        }
        // validate the optional field `rf_role`
        if (jsonObj.getAsJsonObject("rf_role") != null) {
            RfRole.validateJsonObject(jsonObj.getAsJsonObject("rf_role"));
        }
        // validate the optional field `rf_channel`
        if (jsonObj.getAsJsonObject("rf_channel") != null) {
            RfChannel.validateJsonObject(jsonObj.getAsJsonObject("rf_channel"));
        }
        // validate the optional field `poe_mode`
        if (jsonObj.getAsJsonObject("poe_mode") != null) {
            PoeMode.validateJsonObject(jsonObj.getAsJsonObject("poe_mode"));
        }
        // validate the optional field `poe_type`
        if (jsonObj.getAsJsonObject("poe_type") != null) {
            PoeType.validateJsonObject(jsonObj.getAsJsonObject("poe_type"));
        }
        // validate the optional field `untagged_vlan`
        if (jsonObj.getAsJsonObject("untagged_vlan") != null) {
            NestedVLAN.validateJsonObject(jsonObj.getAsJsonObject("untagged_vlan"));
        }
        JsonArray jsonArraytaggedVlans = jsonObj.getAsJsonArray("tagged_vlans");
        if (jsonArraytaggedVlans != null) {
            // ensure the json data is an array
            if (!jsonObj.get("tagged_vlans").isJsonArray()) {
                throw new IllegalArgumentException(String.format("Expected the field `tagged_vlans` to be an array in the JSON string but got `%s`", jsonObj.get("tagged_vlans")
                        .toString()));
            }
            
            // validate the optional field `tagged_vlans` (array)
            for (int i = 0; i < jsonArraytaggedVlans.size(); i++) {
                NestedVLAN.validateJsonObject(jsonArraytaggedVlans.get(i).getAsJsonObject());
            }
            ;
        }
        // validate the optional field `cable`
        if (jsonObj.getAsJsonObject("cable") != null) {
            NestedCable.validateJsonObject(jsonObj.getAsJsonObject("cable"));
        }
        if (jsonObj.get("cable_end") != null && !jsonObj.get("cable_end").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `cable_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cable_end")
                    .toString()));
        }
        // validate the optional field `wireless_link`
        if (jsonObj.getAsJsonObject("wireless_link") != null) {
            NestedWirelessLink.validateJsonObject(jsonObj.getAsJsonObject("wireless_link"));
        }
        // ensure the json data is an array
        if (jsonObj.get("link_peers") != null && !jsonObj.get("link_peers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `link_peers` to be an array in the JSON string but got `%s`", jsonObj.get("link_peers")
                    .toString()));
        }
        if (jsonObj.get("link_peers_type") != null && !jsonObj.get("link_peers_type").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `link_peers_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link_peers_type")
                    .toString()));
        }
        JsonArray jsonArraywirelessLans = jsonObj.getAsJsonArray("wireless_lans");
        if (jsonArraywirelessLans != null) {
            // ensure the json data is an array
            if (!jsonObj.get("wireless_lans").isJsonArray()) {
                throw new IllegalArgumentException(String.format("Expected the field `wireless_lans` to be an array in the JSON string but got `%s`", jsonObj.get("wireless_lans")
                        .toString()));
            }
            
            // validate the optional field `wireless_lans` (array)
            for (int i = 0; i < jsonArraywirelessLans.size(); i++) {
                NestedWirelessLAN.validateJsonObject(jsonArraywirelessLans.get(i).getAsJsonObject());
            }
            ;
        }
        // validate the optional field `vrf`
        if (jsonObj.getAsJsonObject("vrf") != null) {
            NestedVRF.validateJsonObject(jsonObj.getAsJsonObject("vrf"));
        }
        // validate the optional field `l2vpn_termination`
        if (jsonObj.getAsJsonObject("l2vpn_termination") != null) {
            NestedL2VPNTermination.validateJsonObject(jsonObj.getAsJsonObject("l2vpn_termination"));
        }
        // ensure the json data is an array
        if (jsonObj.get("connected_endpoints") != null && !jsonObj.get("connected_endpoints").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `connected_endpoints` to be an array in the JSON string but got `%s`", jsonObj.get("connected_endpoints")
                    .toString()));
        }
        if (jsonObj.get("connected_endpoints_type") != null && !jsonObj.get("connected_endpoints_type").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `connected_endpoints_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connected_endpoints_type")
                    .toString()));
        }
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
        if (jsonArraytags != null) {
            // ensure the json data is an array
            if (!jsonObj.get("tags").isJsonArray()) {
                throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags")
                        .toString()));
            }
            
            // validate the optional field `tags` (array)
            for (int i = 0; i < jsonArraytags.size(); i++) {
                NestedTag.validateJsonObject(jsonArraytags.get(i).getAsJsonObject());
            }
            ;
        }
    }
    
    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!ModelInterface.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'ModelInterface' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<ModelInterface> thisAdapter = gson.getDelegateAdapter(this, TypeToken.get(ModelInterface.class));
            
            return (TypeAdapter<T>) new TypeAdapter<ModelInterface>() {
                @Override
                public void write(JsonWriter out, ModelInterface value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }
                
                @Override
                public ModelInterface read(JsonReader in) throws IOException {
                    JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
                    validateJsonObject(jsonObj);
                    return thisAdapter.fromJsonTree(jsonObj);
                }
                
            }.nullSafe();
        }
    }
    
    /**
     * Create an instance of ModelInterface given an JSON string
     *
     * @param jsonString JSON string
     *
     * @return An instance of ModelInterface
     *
     * @throws IOException if the JSON string is invalid with respect to ModelInterface
     */
    public static ModelInterface fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, ModelInterface.class);
    }
    
    /**
     * Convert an instance of ModelInterface to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

