/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * CableTermination
 */
@JsonPropertyOrder({
  CableTermination.JSON_PROPERTY_ID,
  CableTermination.JSON_PROPERTY_URL,
  CableTermination.JSON_PROPERTY_DISPLAY,
  CableTermination.JSON_PROPERTY_CABLE,
  CableTermination.JSON_PROPERTY_CABLE_END,
  CableTermination.JSON_PROPERTY_TERMINATION_TYPE,
  CableTermination.JSON_PROPERTY_TERMINATION_ID,
  CableTermination.JSON_PROPERTY_TERMINATION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-31T15:10:46.540964900+02:00[Europe/Berlin]")
public class CableTermination {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_URL = "url";
  private URI url;

  public static final String JSON_PROPERTY_DISPLAY = "display";
  private String display;

  public static final String JSON_PROPERTY_CABLE = "cable";
  private Integer cable;

  /**
   * Gets or Sets cableEnd
   */
  public enum CableEndEnum {
    A("A"),
    
    B("B"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    CableEndEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CableEndEnum fromValue(String value) {
      for (CableEndEnum b : CableEndEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_CABLE_END = "cable_end";
  private CableEndEnum cableEnd;

  public static final String JSON_PROPERTY_TERMINATION_TYPE = "termination_type";
  private String terminationType;

  public static final String JSON_PROPERTY_TERMINATION_ID = "termination_id";
  private Integer terminationId;

  public static final String JSON_PROPERTY_TERMINATION = "termination";
  private Map<String, String> termination = null;

  public CableTermination() { 
  }

  @JsonCreator
  public CableTermination(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_URL) URI url, 
    @JsonProperty(JSON_PROPERTY_DISPLAY) String display, 
    @JsonProperty(JSON_PROPERTY_TERMINATION) Map<String, String> termination
  ) {
  this();
    this.id = id;
    this.url = url;
    this.display = display;
    this.termination = termination;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUrl() {
    return url;
  }




   /**
   * Get display
   * @return display
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplay() {
    return display;
  }




  public CableTermination cable(Integer cable) {
    this.cable = cable;
    return this;
  }

   /**
   * Get cable
   * @return cable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCable() {
    return cable;
  }


  @JsonProperty(JSON_PROPERTY_CABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCable(Integer cable) {
    this.cable = cable;
  }


  public CableTermination cableEnd(CableEndEnum cableEnd) {
    this.cableEnd = cableEnd;
    return this;
  }

   /**
   * Get cableEnd
   * @return cableEnd
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CABLE_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CableEndEnum getCableEnd() {
    return cableEnd;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCableEnd(CableEndEnum cableEnd) {
    this.cableEnd = cableEnd;
  }


  public CableTermination terminationType(String terminationType) {
    this.terminationType = terminationType;
    return this;
  }

   /**
   * Get terminationType
   * @return terminationType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TERMINATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTerminationType() {
    return terminationType;
  }


  @JsonProperty(JSON_PROPERTY_TERMINATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTerminationType(String terminationType) {
    this.terminationType = terminationType;
  }


  public CableTermination terminationId(Integer terminationId) {
    this.terminationId = terminationId;
    return this;
  }

   /**
   * Get terminationId
   * minimum: 0
   * maximum: 9223372036854775807
   * @return terminationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TERMINATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTerminationId() {
    return terminationId;
  }


  @JsonProperty(JSON_PROPERTY_TERMINATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTerminationId(Integer terminationId) {
    this.terminationId = terminationId;
  }


   /**
   * Get termination
   * @return termination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TERMINATION)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getTermination() {
    return termination;
  }




  /**
   * Return true if this CableTermination object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CableTermination cableTermination = (CableTermination) o;
    return Objects.equals(this.id, cableTermination.id) &&
        Objects.equals(this.url, cableTermination.url) &&
        Objects.equals(this.display, cableTermination.display) &&
        Objects.equals(this.cable, cableTermination.cable) &&
        Objects.equals(this.cableEnd, cableTermination.cableEnd) &&
        Objects.equals(this.terminationType, cableTermination.terminationType) &&
        Objects.equals(this.terminationId, cableTermination.terminationId) &&
        Objects.equals(this.termination, cableTermination.termination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, display, cable, cableEnd, terminationType, terminationId, termination);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CableTermination {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    cable: ").append(toIndentedString(cable)).append("\n");
    sb.append("    cableEnd: ").append(toIndentedString(cableEnd)).append("\n");
    sb.append("    terminationType: ").append(toIndentedString(terminationType)).append("\n");
    sb.append("    terminationId: ").append(toIndentedString(terminationId)).append("\n");
    sb.append("    termination: ").append(toIndentedString(termination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

