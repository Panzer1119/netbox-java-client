/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.codemakers.netbox.client.model.NestedCable;
import de.codemakers.netbox.client.model.NestedTag;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * WritablePowerFeed
 */
@JsonPropertyOrder({
  WritablePowerFeed.JSON_PROPERTY_ID,
  WritablePowerFeed.JSON_PROPERTY_URL,
  WritablePowerFeed.JSON_PROPERTY_DISPLAY,
  WritablePowerFeed.JSON_PROPERTY_POWER_PANEL,
  WritablePowerFeed.JSON_PROPERTY_RACK,
  WritablePowerFeed.JSON_PROPERTY_NAME,
  WritablePowerFeed.JSON_PROPERTY_STATUS,
  WritablePowerFeed.JSON_PROPERTY_TYPE,
  WritablePowerFeed.JSON_PROPERTY_SUPPLY,
  WritablePowerFeed.JSON_PROPERTY_PHASE,
  WritablePowerFeed.JSON_PROPERTY_VOLTAGE,
  WritablePowerFeed.JSON_PROPERTY_AMPERAGE,
  WritablePowerFeed.JSON_PROPERTY_MAX_UTILIZATION,
  WritablePowerFeed.JSON_PROPERTY_COMMENTS,
  WritablePowerFeed.JSON_PROPERTY_MARK_CONNECTED,
  WritablePowerFeed.JSON_PROPERTY_CABLE,
  WritablePowerFeed.JSON_PROPERTY_LINK_PEER,
  WritablePowerFeed.JSON_PROPERTY_LINK_PEER_TYPE,
  WritablePowerFeed.JSON_PROPERTY_CONNECTED_ENDPOINT,
  WritablePowerFeed.JSON_PROPERTY_CONNECTED_ENDPOINT_TYPE,
  WritablePowerFeed.JSON_PROPERTY_CONNECTED_ENDPOINT_REACHABLE,
  WritablePowerFeed.JSON_PROPERTY_TAGS,
  WritablePowerFeed.JSON_PROPERTY_CUSTOM_FIELDS,
  WritablePowerFeed.JSON_PROPERTY_CREATED,
  WritablePowerFeed.JSON_PROPERTY_LAST_UPDATED,
  WritablePowerFeed.JSON_PROPERTY_OCCUPIED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-31T18:36:37.665487300+02:00[Europe/Berlin]")
public class WritablePowerFeed {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_URL = "url";
  private URI url;

  public static final String JSON_PROPERTY_DISPLAY = "display";
  private String display;

  public static final String JSON_PROPERTY_POWER_PANEL = "power_panel";
  private Integer powerPanel;

  public static final String JSON_PROPERTY_RACK = "rack";
  private JsonNullable<Integer> rack = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    OFFLINE("offline"),
    
    ACTIVE("active"),
    
    PLANNED("planned"),
    
    FAILED("failed"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    PRIMARY("primary"),
    
    REDUNDANT("redundant"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * Gets or Sets supply
   */
  public enum SupplyEnum {
    AC("ac"),
    
    DC("dc"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    SupplyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SupplyEnum fromValue(String value) {
      for (SupplyEnum b : SupplyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_SUPPLY = "supply";
  private SupplyEnum supply;

  /**
   * Gets or Sets phase
   */
  public enum PhaseEnum {
    SINGLE_PHASE("single-phase"),
    
    THREE_PHASE("three-phase"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    PhaseEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PhaseEnum fromValue(String value) {
      for (PhaseEnum b : PhaseEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_PHASE = "phase";
  private PhaseEnum phase;

  public static final String JSON_PROPERTY_VOLTAGE = "voltage";
  private Integer voltage;

  public static final String JSON_PROPERTY_AMPERAGE = "amperage";
  private Integer amperage;

  public static final String JSON_PROPERTY_MAX_UTILIZATION = "max_utilization";
  private Integer maxUtilization;

  public static final String JSON_PROPERTY_COMMENTS = "comments";
  private String comments;

  public static final String JSON_PROPERTY_MARK_CONNECTED = "mark_connected";
  private Boolean markConnected;

  public static final String JSON_PROPERTY_CABLE = "cable";
  private NestedCable cable;

  public static final String JSON_PROPERTY_LINK_PEER = "link_peer";
  private LinkTermination linkPeer = null;

  public static final String JSON_PROPERTY_LINK_PEER_TYPE = "link_peer_type";
  private String linkPeerType;

  public static final String JSON_PROPERTY_CONNECTED_ENDPOINT = "connected_endpoint";
  private LinkTermination connectedEndpoint = null;

  public static final String JSON_PROPERTY_CONNECTED_ENDPOINT_TYPE = "connected_endpoint_type";
  private String connectedEndpointType;

  public static final String JSON_PROPERTY_CONNECTED_ENDPOINT_REACHABLE = "connected_endpoint_reachable";
  private Boolean connectedEndpointReachable;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<NestedTag> tags = null;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "custom_fields";
  private Object customFields;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_LAST_UPDATED = "last_updated";
  private OffsetDateTime lastUpdated;

  public static final String JSON_PROPERTY_OCCUPIED = "_occupied";
  private Boolean occupied;

  public WritablePowerFeed() { 
  }

  @JsonCreator
  public WritablePowerFeed(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_URL) URI url, 
    @JsonProperty(JSON_PROPERTY_DISPLAY) String display, 
    @JsonProperty(JSON_PROPERTY_LINK_PEER) LinkTermination linkPeer, 
    @JsonProperty(JSON_PROPERTY_LINK_PEER_TYPE) String linkPeerType, 
    @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT) LinkTermination connectedEndpoint, 
    @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT_TYPE) String connectedEndpointType, 
    @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT_REACHABLE) Boolean connectedEndpointReachable, 
    @JsonProperty(JSON_PROPERTY_CREATED) OffsetDateTime created, 
    @JsonProperty(JSON_PROPERTY_LAST_UPDATED) OffsetDateTime lastUpdated, 
    @JsonProperty(JSON_PROPERTY_OCCUPIED) Boolean occupied
  ) {
  this();
    this.id = id;
    this.url = url;
    this.display = display;
    this.linkPeer = linkPeer;
    this.linkPeerType = linkPeerType;
    this.connectedEndpoint = connectedEndpoint;
    this.connectedEndpointType = connectedEndpointType;
    this.connectedEndpointReachable = connectedEndpointReachable;
    this.created = created;
    this.lastUpdated = lastUpdated;
    this.occupied = occupied;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUrl() {
    return url;
  }




   /**
   * Get display
   * @return display
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplay() {
    return display;
  }




  public WritablePowerFeed powerPanel(Integer powerPanel) {
    this.powerPanel = powerPanel;
    return this;
  }

   /**
   * Get powerPanel
   * @return powerPanel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_POWER_PANEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPowerPanel() {
    return powerPanel;
  }


  @JsonProperty(JSON_PROPERTY_POWER_PANEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPowerPanel(Integer powerPanel) {
    this.powerPanel = powerPanel;
  }


  public WritablePowerFeed rack(Integer rack) {
    this.rack = JsonNullable.<Integer>of(rack);
    return this;
  }

   /**
   * Get rack
   * @return rack
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Integer getRack() {
        return rack.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getRack_JsonNullable() {
    return rack;
  }
  
  @JsonProperty(JSON_PROPERTY_RACK)
  public void setRack_JsonNullable(JsonNullable<Integer> rack) {
    this.rack = rack;
  }

  public void setRack(Integer rack) {
    this.rack = JsonNullable.<Integer>of(rack);
  }


  public WritablePowerFeed name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public WritablePowerFeed status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public WritablePowerFeed type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public WritablePowerFeed supply(SupplyEnum supply) {
    this.supply = supply;
    return this;
  }

   /**
   * Get supply
   * @return supply
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SupplyEnum getSupply() {
    return supply;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupply(SupplyEnum supply) {
    this.supply = supply;
  }


  public WritablePowerFeed phase(PhaseEnum phase) {
    this.phase = phase;
    return this;
  }

   /**
   * Get phase
   * @return phase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PhaseEnum getPhase() {
    return phase;
  }


  @JsonProperty(JSON_PROPERTY_PHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhase(PhaseEnum phase) {
    this.phase = phase;
  }


  public WritablePowerFeed voltage(Integer voltage) {
    this.voltage = voltage;
    return this;
  }

   /**
   * Get voltage
   * minimum: -32768
   * maximum: 32767
   * @return voltage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VOLTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVoltage() {
    return voltage;
  }


  @JsonProperty(JSON_PROPERTY_VOLTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVoltage(Integer voltage) {
    this.voltage = voltage;
  }


  public WritablePowerFeed amperage(Integer amperage) {
    this.amperage = amperage;
    return this;
  }

   /**
   * Get amperage
   * minimum: 1
   * maximum: 32767
   * @return amperage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AMPERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAmperage() {
    return amperage;
  }


  @JsonProperty(JSON_PROPERTY_AMPERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmperage(Integer amperage) {
    this.amperage = amperage;
  }


  public WritablePowerFeed maxUtilization(Integer maxUtilization) {
    this.maxUtilization = maxUtilization;
    return this;
  }

   /**
   * Maximum permissible draw (percentage)
   * minimum: 1
   * maximum: 100
   * @return maxUtilization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum permissible draw (percentage)")
  @JsonProperty(JSON_PROPERTY_MAX_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxUtilization() {
    return maxUtilization;
  }


  @JsonProperty(JSON_PROPERTY_MAX_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxUtilization(Integer maxUtilization) {
    this.maxUtilization = maxUtilization;
  }


  public WritablePowerFeed comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComments() {
    return comments;
  }


  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComments(String comments) {
    this.comments = comments;
  }


  public WritablePowerFeed markConnected(Boolean markConnected) {
    this.markConnected = markConnected;
    return this;
  }

   /**
   * Treat as if a cable is connected
   * @return markConnected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Treat as if a cable is connected")
  @JsonProperty(JSON_PROPERTY_MARK_CONNECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMarkConnected() {
    return markConnected;
  }


  @JsonProperty(JSON_PROPERTY_MARK_CONNECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarkConnected(Boolean markConnected) {
    this.markConnected = markConnected;
  }


  public WritablePowerFeed cable(NestedCable cable) {
    this.cable = cable;
    return this;
  }

   /**
   * Get cable
   * @return cable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NestedCable getCable() {
    return cable;
  }


  @JsonProperty(JSON_PROPERTY_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCable(NestedCable cable) {
    this.cable = cable;
  }


   /**
   *  Get linkPeer
   * @return linkPeer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " Get linkPeer. ")
  @JsonProperty(JSON_PROPERTY_LINK_PEER)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public LinkTermination getLinkPeer() {
    return linkPeer;
  }




   /**
   * Get linkPeerType
   * @return linkPeerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LINK_PEER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkPeerType() {
    return linkPeerType;
  }




   /**
   *  Get connectedEndpoint
   * @return connectedEndpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " Get connectedEndpoint")
  @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public LinkTermination getConnectedEndpoint() {
    return connectedEndpoint;
  }




   /**
   * Get connectedEndpointType
   * @return connectedEndpointType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectedEndpointType() {
    return connectedEndpointType;
  }




   /**
   * Get connectedEndpointReachable
   * @return connectedEndpointReachable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTED_ENDPOINT_REACHABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConnectedEndpointReachable() {
    return connectedEndpointReachable;
  }




  public WritablePowerFeed tags(List<NestedTag> tags) {
    this.tags = tags;
    return this;
  }

  public WritablePowerFeed addTagsItem(NestedTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<NestedTag> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<NestedTag> tags) {
    this.tags = tags;
  }


  public WritablePowerFeed customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreated() {
    return created;
  }




   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }




   /**
   * Get occupied
   * @return occupied
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OCCUPIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOccupied() {
    return occupied;
  }




  /**
   * Return true if this WritablePowerFeed object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WritablePowerFeed writablePowerFeed = (WritablePowerFeed) o;
    return Objects.equals(this.id, writablePowerFeed.id) &&
        Objects.equals(this.url, writablePowerFeed.url) &&
        Objects.equals(this.display, writablePowerFeed.display) &&
        Objects.equals(this.powerPanel, writablePowerFeed.powerPanel) &&
        equalsNullable(this.rack, writablePowerFeed.rack) &&
        Objects.equals(this.name, writablePowerFeed.name) &&
        Objects.equals(this.status, writablePowerFeed.status) &&
        Objects.equals(this.type, writablePowerFeed.type) &&
        Objects.equals(this.supply, writablePowerFeed.supply) &&
        Objects.equals(this.phase, writablePowerFeed.phase) &&
        Objects.equals(this.voltage, writablePowerFeed.voltage) &&
        Objects.equals(this.amperage, writablePowerFeed.amperage) &&
        Objects.equals(this.maxUtilization, writablePowerFeed.maxUtilization) &&
        Objects.equals(this.comments, writablePowerFeed.comments) &&
        Objects.equals(this.markConnected, writablePowerFeed.markConnected) &&
        Objects.equals(this.cable, writablePowerFeed.cable) &&
        Objects.equals(this.linkPeer, writablePowerFeed.linkPeer) &&
        Objects.equals(this.linkPeerType, writablePowerFeed.linkPeerType) &&
        Objects.equals(this.connectedEndpoint, writablePowerFeed.connectedEndpoint) &&
        Objects.equals(this.connectedEndpointType, writablePowerFeed.connectedEndpointType) &&
        Objects.equals(this.connectedEndpointReachable, writablePowerFeed.connectedEndpointReachable) &&
        Objects.equals(this.tags, writablePowerFeed.tags) &&
        Objects.equals(this.customFields, writablePowerFeed.customFields) &&
        Objects.equals(this.created, writablePowerFeed.created) &&
        Objects.equals(this.lastUpdated, writablePowerFeed.lastUpdated) &&
        Objects.equals(this.occupied, writablePowerFeed.occupied);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, display, powerPanel, hashCodeNullable(rack), name, status, type, supply, phase, voltage, amperage, maxUtilization, comments, markConnected, cable, linkPeer, linkPeerType, connectedEndpoint, connectedEndpointType, connectedEndpointReachable, tags, customFields, created, lastUpdated, occupied);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WritablePowerFeed {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    powerPanel: ").append(toIndentedString(powerPanel)).append("\n");
    sb.append("    rack: ").append(toIndentedString(rack)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    supply: ").append(toIndentedString(supply)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    voltage: ").append(toIndentedString(voltage)).append("\n");
    sb.append("    amperage: ").append(toIndentedString(amperage)).append("\n");
    sb.append("    maxUtilization: ").append(toIndentedString(maxUtilization)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    markConnected: ").append(toIndentedString(markConnected)).append("\n");
    sb.append("    cable: ").append(toIndentedString(cable)).append("\n");
    sb.append("    linkPeer: ").append(toIndentedString(linkPeer)).append("\n");
    sb.append("    linkPeerType: ").append(toIndentedString(linkPeerType)).append("\n");
    sb.append("    connectedEndpoint: ").append(toIndentedString(connectedEndpoint)).append("\n");
    sb.append("    connectedEndpointType: ").append(toIndentedString(connectedEndpointType)).append("\n");
    sb.append("    connectedEndpointReachable: ").append(toIndentedString(connectedEndpointReachable)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    occupied: ").append(toIndentedString(occupied)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

