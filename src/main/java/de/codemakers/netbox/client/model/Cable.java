/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.codemakers.netbox.client.model.LengthUnit;
import de.codemakers.netbox.client.model.NestedTag;
import de.codemakers.netbox.client.model.NestedTenant;
import de.codemakers.netbox.client.model.Status1;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Cable
 */
@JsonPropertyOrder({
  Cable.JSON_PROPERTY_ID,
  Cable.JSON_PROPERTY_URL,
  Cable.JSON_PROPERTY_DISPLAY,
  Cable.JSON_PROPERTY_TERMINATION_A_TYPE,
  Cable.JSON_PROPERTY_TERMINATION_A_ID,
  Cable.JSON_PROPERTY_TERMINATION_A,
  Cable.JSON_PROPERTY_TERMINATION_B_TYPE,
  Cable.JSON_PROPERTY_TERMINATION_B_ID,
  Cable.JSON_PROPERTY_TERMINATION_B,
  Cable.JSON_PROPERTY_TYPE,
  Cable.JSON_PROPERTY_STATUS,
  Cable.JSON_PROPERTY_TENANT,
  Cable.JSON_PROPERTY_LABEL,
  Cable.JSON_PROPERTY_COLOR,
  Cable.JSON_PROPERTY_LENGTH,
  Cable.JSON_PROPERTY_LENGTH_UNIT,
  Cable.JSON_PROPERTY_TAGS,
  Cable.JSON_PROPERTY_CUSTOM_FIELDS,
  Cable.JSON_PROPERTY_CREATED,
  Cable.JSON_PROPERTY_LAST_UPDATED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-31T18:36:37.665487300+02:00[Europe/Berlin]")
public class Cable {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_URL = "url";
  private URI url;

  public static final String JSON_PROPERTY_DISPLAY = "display";
  private String display;

  public static final String JSON_PROPERTY_TERMINATION_A_TYPE = "termination_a_type";
  private String terminationAType;

  public static final String JSON_PROPERTY_TERMINATION_A_ID = "termination_a_id";
  private Integer terminationAId;

  public static final String JSON_PROPERTY_TERMINATION_A = "termination_a";
  private Map<String, String> terminationA = null;

  public static final String JSON_PROPERTY_TERMINATION_B_TYPE = "termination_b_type";
  private String terminationBType;

  public static final String JSON_PROPERTY_TERMINATION_B_ID = "termination_b_id";
  private Integer terminationBId;

  public static final String JSON_PROPERTY_TERMINATION_B = "termination_b";
  private Map<String, String> terminationB = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    CAT3("cat3"),
    
    CAT5("cat5"),
    
    CAT5E("cat5e"),
    
    CAT6("cat6"),
    
    CAT6A("cat6a"),
    
    CAT7("cat7"),
    
    CAT7A("cat7a"),
    
    CAT8("cat8"),
    
    DAC_ACTIVE("dac-active"),
    
    DAC_PASSIVE("dac-passive"),
    
    MRJ21_TRUNK("mrj21-trunk"),
    
    COAXIAL("coaxial"),
    
    MMF("mmf"),
    
    MMF_OM1("mmf-om1"),
    
    MMF_OM2("mmf-om2"),
    
    MMF_OM3("mmf-om3"),
    
    MMF_OM4("mmf-om4"),
    
    MMF_OM5("mmf-om5"),
    
    SMF("smf"),
    
    SMF_OS1("smf-os1"),
    
    SMF_OS2("smf-os2"),
    
    AOC("aoc"),
    
    POWER("power"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_STATUS = "status";
  private Status1 status;

  public static final String JSON_PROPERTY_TENANT = "tenant";
  private JsonNullable<NestedTenant> tenant = JsonNullable.<NestedTenant>undefined();

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  public static final String JSON_PROPERTY_LENGTH = "length";
  private JsonNullable<BigDecimal> length = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_LENGTH_UNIT = "length_unit";
  private LengthUnit lengthUnit;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<NestedTag> tags = null;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "custom_fields";
  private Object customFields;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_LAST_UPDATED = "last_updated";
  private OffsetDateTime lastUpdated;

  public Cable() { 
  }

  @JsonCreator
  public Cable(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_URL) URI url, 
    @JsonProperty(JSON_PROPERTY_DISPLAY) String display, 
    @JsonProperty(JSON_PROPERTY_TERMINATION_A) Map<String, String> terminationA, 
    @JsonProperty(JSON_PROPERTY_TERMINATION_B) Map<String, String> terminationB, 
    @JsonProperty(JSON_PROPERTY_CREATED) OffsetDateTime created, 
    @JsonProperty(JSON_PROPERTY_LAST_UPDATED) OffsetDateTime lastUpdated
  ) {
  this();
    this.id = id;
    this.url = url;
    this.display = display;
    this.terminationA = terminationA;
    this.terminationB = terminationB;
    this.created = created;
    this.lastUpdated = lastUpdated;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUrl() {
    return url;
  }




   /**
   * Get display
   * @return display
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplay() {
    return display;
  }




  public Cable terminationAType(String terminationAType) {
    this.terminationAType = terminationAType;
    return this;
  }

   /**
   * Get terminationAType
   * @return terminationAType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TERMINATION_A_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTerminationAType() {
    return terminationAType;
  }


  @JsonProperty(JSON_PROPERTY_TERMINATION_A_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTerminationAType(String terminationAType) {
    this.terminationAType = terminationAType;
  }


  public Cable terminationAId(Integer terminationAId) {
    this.terminationAId = terminationAId;
    return this;
  }

   /**
   * Get terminationAId
   * minimum: 0
   * maximum: 9223372036854775807
   * @return terminationAId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TERMINATION_A_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTerminationAId() {
    return terminationAId;
  }


  @JsonProperty(JSON_PROPERTY_TERMINATION_A_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTerminationAId(Integer terminationAId) {
    this.terminationAId = terminationAId;
  }


   /**
   * Get terminationA
   * @return terminationA
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TERMINATION_A)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getTerminationA() {
    return terminationA;
  }




  public Cable terminationBType(String terminationBType) {
    this.terminationBType = terminationBType;
    return this;
  }

   /**
   * Get terminationBType
   * @return terminationBType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TERMINATION_B_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTerminationBType() {
    return terminationBType;
  }


  @JsonProperty(JSON_PROPERTY_TERMINATION_B_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTerminationBType(String terminationBType) {
    this.terminationBType = terminationBType;
  }


  public Cable terminationBId(Integer terminationBId) {
    this.terminationBId = terminationBId;
    return this;
  }

   /**
   * Get terminationBId
   * minimum: 0
   * maximum: 9223372036854775807
   * @return terminationBId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TERMINATION_B_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTerminationBId() {
    return terminationBId;
  }


  @JsonProperty(JSON_PROPERTY_TERMINATION_B_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTerminationBId(Integer terminationBId) {
    this.terminationBId = terminationBId;
  }


   /**
   * Get terminationB
   * @return terminationB
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TERMINATION_B)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getTerminationB() {
    return terminationB;
  }




  public Cable type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Cable status(Status1 status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Status1 getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(Status1 status) {
    this.status = status;
  }


  public Cable tenant(NestedTenant tenant) {
    this.tenant = JsonNullable.<NestedTenant>of(tenant);
    return this;
  }

   /**
   * Get tenant
   * @return tenant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NestedTenant getTenant() {
        return tenant.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NestedTenant> getTenant_JsonNullable() {
    return tenant;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANT)
  public void setTenant_JsonNullable(JsonNullable<NestedTenant> tenant) {
    this.tenant = tenant;
  }

  public void setTenant(NestedTenant tenant) {
    this.tenant = JsonNullable.<NestedTenant>of(tenant);
  }


  public Cable label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public Cable color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public Cable length(BigDecimal length) {
    this.length = JsonNullable.<BigDecimal>of(length);
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public BigDecimal getLength() {
        return length.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getLength_JsonNullable() {
    return length;
  }
  
  @JsonProperty(JSON_PROPERTY_LENGTH)
  public void setLength_JsonNullable(JsonNullable<BigDecimal> length) {
    this.length = length;
  }

  public void setLength(BigDecimal length) {
    this.length = JsonNullable.<BigDecimal>of(length);
  }


  public Cable lengthUnit(LengthUnit lengthUnit) {
    this.lengthUnit = lengthUnit;
    return this;
  }

   /**
   * Get lengthUnit
   * @return lengthUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LENGTH_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LengthUnit getLengthUnit() {
    return lengthUnit;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLengthUnit(LengthUnit lengthUnit) {
    this.lengthUnit = lengthUnit;
  }


  public Cable tags(List<NestedTag> tags) {
    this.tags = tags;
    return this;
  }

  public Cable addTagsItem(NestedTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<NestedTag> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<NestedTag> tags) {
    this.tags = tags;
  }


  public Cable customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreated() {
    return created;
  }




   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }




  /**
   * Return true if this Cable object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cable cable = (Cable) o;
    return Objects.equals(this.id, cable.id) &&
        Objects.equals(this.url, cable.url) &&
        Objects.equals(this.display, cable.display) &&
        Objects.equals(this.terminationAType, cable.terminationAType) &&
        Objects.equals(this.terminationAId, cable.terminationAId) &&
        Objects.equals(this.terminationA, cable.terminationA) &&
        Objects.equals(this.terminationBType, cable.terminationBType) &&
        Objects.equals(this.terminationBId, cable.terminationBId) &&
        Objects.equals(this.terminationB, cable.terminationB) &&
        Objects.equals(this.type, cable.type) &&
        Objects.equals(this.status, cable.status) &&
        equalsNullable(this.tenant, cable.tenant) &&
        Objects.equals(this.label, cable.label) &&
        Objects.equals(this.color, cable.color) &&
        equalsNullable(this.length, cable.length) &&
        Objects.equals(this.lengthUnit, cable.lengthUnit) &&
        Objects.equals(this.tags, cable.tags) &&
        Objects.equals(this.customFields, cable.customFields) &&
        Objects.equals(this.created, cable.created) &&
        Objects.equals(this.lastUpdated, cable.lastUpdated);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, display, terminationAType, terminationAId, terminationA, terminationBType, terminationBId, terminationB, type, status, hashCodeNullable(tenant), label, color, hashCodeNullable(length), lengthUnit, tags, customFields, created, lastUpdated);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cable {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    terminationAType: ").append(toIndentedString(terminationAType)).append("\n");
    sb.append("    terminationAId: ").append(toIndentedString(terminationAId)).append("\n");
    sb.append("    terminationA: ").append(toIndentedString(terminationA)).append("\n");
    sb.append("    terminationBType: ").append(toIndentedString(terminationBType)).append("\n");
    sb.append("    terminationBId: ").append(toIndentedString(terminationBId)).append("\n");
    sb.append("    terminationB: ").append(toIndentedString(terminationB)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    lengthUnit: ").append(toIndentedString(lengthUnit)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

