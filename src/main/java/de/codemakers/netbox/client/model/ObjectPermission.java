/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.codemakers.netbox.client.model.NestedGroup;
import de.codemakers.netbox.client.model.NestedUser;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ObjectPermission
 */
@JsonPropertyOrder({
  ObjectPermission.JSON_PROPERTY_ID,
  ObjectPermission.JSON_PROPERTY_URL,
  ObjectPermission.JSON_PROPERTY_DISPLAY,
  ObjectPermission.JSON_PROPERTY_NAME,
  ObjectPermission.JSON_PROPERTY_DESCRIPTION,
  ObjectPermission.JSON_PROPERTY_ENABLED,
  ObjectPermission.JSON_PROPERTY_OBJECT_TYPES,
  ObjectPermission.JSON_PROPERTY_GROUPS,
  ObjectPermission.JSON_PROPERTY_USERS,
  ObjectPermission.JSON_PROPERTY_ACTIONS,
  ObjectPermission.JSON_PROPERTY_CONSTRAINTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-31T18:36:37.665487300+02:00[Europe/Berlin]")
public class ObjectPermission {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_URL = "url";
  private URI url;

  public static final String JSON_PROPERTY_DISPLAY = "display";
  private String display;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_OBJECT_TYPES = "object_types";
  private Set<String> objectTypes = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_GROUPS = "groups";
  private Set<NestedGroup> groups = null;

  public static final String JSON_PROPERTY_USERS = "users";
  private Set<NestedUser> users = null;

  public static final String JSON_PROPERTY_ACTIONS = "actions";
  private List<String> actions = new ArrayList<>();

  public static final String JSON_PROPERTY_CONSTRAINTS = "constraints";
  private JsonNullable<String> constraints = JsonNullable.<String>undefined();

  public ObjectPermission() { 
  }

  @JsonCreator
  public ObjectPermission(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_URL) URI url, 
    @JsonProperty(JSON_PROPERTY_DISPLAY) String display
  ) {
  this();
    this.id = id;
    this.url = url;
    this.display = display;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUrl() {
    return url;
  }




   /**
   * Get display
   * @return display
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplay() {
    return display;
  }




  public ObjectPermission name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ObjectPermission description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ObjectPermission enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ObjectPermission objectTypes(Set<String> objectTypes) {
    this.objectTypes = objectTypes;
    return this;
  }

  public ObjectPermission addObjectTypesItem(String objectTypesItem) {
    this.objectTypes.add(objectTypesItem);
    return this;
  }

   /**
   * Get objectTypes
   * @return objectTypes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_OBJECT_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<String> getObjectTypes() {
    return objectTypes;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_OBJECT_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObjectTypes(Set<String> objectTypes) {
    this.objectTypes = objectTypes;
  }


  public ObjectPermission groups(Set<NestedGroup> groups) {
    this.groups = groups;
    return this;
  }

  public ObjectPermission addGroupsItem(NestedGroup groupsItem) {
    if (this.groups == null) {
      this.groups = new LinkedHashSet<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<NestedGroup> getGroups() {
    return groups;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroups(Set<NestedGroup> groups) {
    this.groups = groups;
  }


  public ObjectPermission users(Set<NestedUser> users) {
    this.users = users;
    return this;
  }

  public ObjectPermission addUsersItem(NestedUser usersItem) {
    if (this.users == null) {
      this.users = new LinkedHashSet<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<NestedUser> getUsers() {
    return users;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsers(Set<NestedUser> users) {
    this.users = users;
  }


  public ObjectPermission actions(List<String> actions) {
    this.actions = actions;
    return this;
  }

  public ObjectPermission addActionsItem(String actionsItem) {
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * The list of actions granted by this permission
   * @return actions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The list of actions granted by this permission")
  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getActions() {
    return actions;
  }


  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActions(List<String> actions) {
    this.actions = actions;
  }


  public ObjectPermission constraints(String constraints) {
    this.constraints = JsonNullable.<String>of(constraints);
    return this;
  }

   /**
   * Queryset filter matching the applicable objects of the selected type(s)
   * @return constraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Queryset filter matching the applicable objects of the selected type(s)")
  @JsonIgnore

  public String getConstraints() {
        return constraints.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getConstraints_JsonNullable() {
    return constraints;
  }
  
  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  public void setConstraints_JsonNullable(JsonNullable<String> constraints) {
    this.constraints = constraints;
  }

  public void setConstraints(String constraints) {
    this.constraints = JsonNullable.<String>of(constraints);
  }


  /**
   * Return true if this ObjectPermission object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectPermission objectPermission = (ObjectPermission) o;
    return Objects.equals(this.id, objectPermission.id) &&
        Objects.equals(this.url, objectPermission.url) &&
        Objects.equals(this.display, objectPermission.display) &&
        Objects.equals(this.name, objectPermission.name) &&
        Objects.equals(this.description, objectPermission.description) &&
        Objects.equals(this.enabled, objectPermission.enabled) &&
        Objects.equals(this.objectTypes, objectPermission.objectTypes) &&
        Objects.equals(this.groups, objectPermission.groups) &&
        Objects.equals(this.users, objectPermission.users) &&
        Objects.equals(this.actions, objectPermission.actions) &&
        equalsNullable(this.constraints, objectPermission.constraints);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, display, name, description, enabled, objectTypes, groups, users, actions, hashCodeNullable(constraints));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectPermission {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    objectTypes: ").append(toIndentedString(objectTypes)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

