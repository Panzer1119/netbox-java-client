/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codemakers.netbox.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.codemakers.netbox.client.JSON;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.*;
import java.util.Map.Entry;

/**
 * VLAN
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-29T15:14:28.278845400+02:00[Europe/Berlin]")
public class VLAN {
    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;
    
    public static final String SERIALIZED_NAME_URL = "url";
    @SerializedName(SERIALIZED_NAME_URL)
    private URI url;
    
    public static final String SERIALIZED_NAME_DISPLAY = "display";
    @SerializedName(SERIALIZED_NAME_DISPLAY)
    private String display;
    
    public static final String SERIALIZED_NAME_SITE = "site";
    @SerializedName(SERIALIZED_NAME_SITE)
    private NestedSite site;
    
    public static final String SERIALIZED_NAME_GROUP = "group";
    @SerializedName(SERIALIZED_NAME_GROUP)
    private NestedVLANGroup group;
    
    public static final String SERIALIZED_NAME_VID = "vid";
    @SerializedName(SERIALIZED_NAME_VID)
    private Integer vid;
    
    public static final String SERIALIZED_NAME_NAME = "name";
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    
    public static final String SERIALIZED_NAME_TENANT = "tenant";
    @SerializedName(SERIALIZED_NAME_TENANT)
    private NestedTenant tenant;
    
    public static final String SERIALIZED_NAME_STATUS = "status";
    @SerializedName(SERIALIZED_NAME_STATUS)
    private Status8 status;
    
    public static final String SERIALIZED_NAME_ROLE = "role";
    @SerializedName(SERIALIZED_NAME_ROLE)
    private NestedRole role;
    
    public static final String SERIALIZED_NAME_DESCRIPTION = "description";
    @SerializedName(SERIALIZED_NAME_DESCRIPTION)
    private String description;
    
    public static final String SERIALIZED_NAME_L2VPN_TERMINATION = "l2vpn_termination";
    @SerializedName(SERIALIZED_NAME_L2VPN_TERMINATION)
    private NestedL2VPNTermination l2vpnTermination;
    
    public static final String SERIALIZED_NAME_TAGS = "tags";
    @SerializedName(SERIALIZED_NAME_TAGS)
    private List<NestedTag> tags = null;
    
    public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
    @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
    private Object customFields;
    
    public static final String SERIALIZED_NAME_CREATED = "created";
    @SerializedName(SERIALIZED_NAME_CREATED)
    private OffsetDateTime created;
    
    public static final String SERIALIZED_NAME_LAST_UPDATED = "last_updated";
    @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
    private OffsetDateTime lastUpdated;
    
    public static final String SERIALIZED_NAME_PREFIX_COUNT = "prefix_count";
    @SerializedName(SERIALIZED_NAME_PREFIX_COUNT)
    private Integer prefixCount;
    
    public VLAN() {
    }
    
    
    public VLAN(Integer id, URI url, String display, OffsetDateTime created, OffsetDateTime lastUpdated, Integer prefixCount) {
        this();
        this.id = id;
        this.url = url;
        this.display = display;
        this.created = created;
        this.lastUpdated = lastUpdated;
        this.prefixCount = prefixCount;
    }
    
    /**
     * Get id
     *
     * @return id
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Integer getId() {
        return id;
    }
    
    
    /**
     * Get url
     *
     * @return url
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public URI getUrl() {
        return url;
    }
    
    
    /**
     * Get display
     *
     * @return display
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public String getDisplay() {
        return display;
    }
    
    
    public VLAN site(NestedSite site) {
        
        this.site = site;
        return this;
    }
    
    /**
     * Get site
     *
     * @return site
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedSite getSite() {
        return site;
    }
    
    
    public void setSite(NestedSite site) {
        this.site = site;
    }
    
    
    public VLAN group(NestedVLANGroup group) {
        
        this.group = group;
        return this;
    }
    
    /**
     * Get group
     *
     * @return group
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedVLANGroup getGroup() {
        return group;
    }
    
    
    public void setGroup(NestedVLANGroup group) {
        this.group = group;
    }
    
    
    public VLAN vid(Integer vid) {
        
        this.vid = vid;
        return this;
    }
    
    /**
     * Get vid
     * minimum: 1
     * maximum: 4094
     *
     * @return vid
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    
    public Integer getVid() {
        return vid;
    }
    
    
    public void setVid(Integer vid) {
        this.vid = vid;
    }
    
    
    public VLAN name(String name) {
        
        this.name = name;
        return this;
    }
    
    /**
     * Get name
     *
     * @return name
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    
    public String getName() {
        return name;
    }
    
    
    public void setName(String name) {
        this.name = name;
    }
    
    
    public VLAN tenant(NestedTenant tenant) {
        
        this.tenant = tenant;
        return this;
    }
    
    /**
     * Get tenant
     *
     * @return tenant
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedTenant getTenant() {
        return tenant;
    }
    
    
    public void setTenant(NestedTenant tenant) {
        this.tenant = tenant;
    }
    
    
    public VLAN status(Status8 status) {
        
        this.status = status;
        return this;
    }
    
    /**
     * Get status
     *
     * @return status
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Status8 getStatus() {
        return status;
    }
    
    
    public void setStatus(Status8 status) {
        this.status = status;
    }
    
    
    public VLAN role(NestedRole role) {
        
        this.role = role;
        return this;
    }
    
    /**
     * Get role
     *
     * @return role
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedRole getRole() {
        return role;
    }
    
    
    public void setRole(NestedRole role) {
        this.role = role;
    }
    
    
    public VLAN description(String description) {
        
        this.description = description;
        return this;
    }
    
    /**
     * Get description
     *
     * @return description
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public String getDescription() {
        return description;
    }
    
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    
    public VLAN l2vpnTermination(NestedL2VPNTermination l2vpnTermination) {
        
        this.l2vpnTermination = l2vpnTermination;
        return this;
    }
    
    /**
     * Get l2vpnTermination
     *
     * @return l2vpnTermination
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public NestedL2VPNTermination getL2vpnTermination() {
        return l2vpnTermination;
    }
    
    
    public void setL2vpnTermination(NestedL2VPNTermination l2vpnTermination) {
        this.l2vpnTermination = l2vpnTermination;
    }
    
    
    public VLAN tags(List<NestedTag> tags) {
        
        this.tags = tags;
        return this;
    }
    
    public VLAN addTagsItem(NestedTag tagsItem) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tagsItem);
        return this;
    }
    
    /**
     * Get tags
     *
     * @return tags
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public List<NestedTag> getTags() {
        return tags;
    }
    
    
    public void setTags(List<NestedTag> tags) {
        this.tags = tags;
    }
    
    
    public VLAN customFields(Object customFields) {
        
        this.customFields = customFields;
        return this;
    }
    
    /**
     * Get customFields
     *
     * @return customFields
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Object getCustomFields() {
        return customFields;
    }
    
    
    public void setCustomFields(Object customFields) {
        this.customFields = customFields;
    }
    
    
    /**
     * Get created
     *
     * @return created
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public OffsetDateTime getCreated() {
        return created;
    }
    
    
    /**
     * Get lastUpdated
     *
     * @return lastUpdated
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public OffsetDateTime getLastUpdated() {
        return lastUpdated;
    }
    
    
    /**
     * Get prefixCount
     *
     * @return prefixCount
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    
    public Integer getPrefixCount() {
        return prefixCount;
    }
    
    
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VLAN VLAN = (VLAN) o;
        return Objects.equals(this.id, VLAN.id) && Objects.equals(this.url, VLAN.url) && Objects.equals(this.display, VLAN.display) && Objects.equals(this.site, VLAN.site) && Objects.equals(this.group, VLAN.group) && Objects.equals(this.vid, VLAN.vid) && Objects.equals(this.name, VLAN.name) && Objects.equals(this.tenant, VLAN.tenant) && Objects.equals(this.status, VLAN.status) && Objects.equals(this.role, VLAN.role) && Objects.equals(this.description, VLAN.description) && Objects.equals(this.l2vpnTermination, VLAN.l2vpnTermination) && Objects.equals(this.tags, VLAN.tags) && Objects.equals(this.customFields, VLAN.customFields) && Objects.equals(this.created, VLAN.created) && Objects.equals(this.lastUpdated, VLAN.lastUpdated) && Objects.equals(this.prefixCount, VLAN.prefixCount);
    }
    
    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(id, url, display, site, group, vid, name, tenant, status, role, description, l2vpnTermination, tags, customFields, created, lastUpdated, prefixCount);
    }
    
    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
    }
    
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class VLAN {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    display: ").append(toIndentedString(display)).append("\n");
        sb.append("    site: ").append(toIndentedString(site)).append("\n");
        sb.append("    group: ").append(toIndentedString(group)).append("\n");
        sb.append("    vid: ").append(toIndentedString(vid)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    role: ").append(toIndentedString(role)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    l2vpnTermination: ").append(toIndentedString(l2vpnTermination)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
        sb.append("    created: ").append(toIndentedString(created)).append("\n");
        sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
        sb.append("    prefixCount: ").append(toIndentedString(prefixCount)).append("\n");
        sb.append("}");
        return sb.toString();
    }
    
    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
    
    
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;
    
    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("id");
        openapiFields.add("url");
        openapiFields.add("display");
        openapiFields.add("site");
        openapiFields.add("group");
        openapiFields.add("vid");
        openapiFields.add("name");
        openapiFields.add("tenant");
        openapiFields.add("status");
        openapiFields.add("role");
        openapiFields.add("description");
        openapiFields.add("l2vpn_termination");
        openapiFields.add("tags");
        openapiFields.add("custom_fields");
        openapiFields.add("created");
        openapiFields.add("last_updated");
        openapiFields.add("prefix_count");
        
        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
        openapiRequiredFields.add("vid");
        openapiRequiredFields.add("name");
    }
    
    /**
     * Validates the JSON Object and throws an exception if issues found
     *
     * @param jsonObj JSON Object
     *
     * @throws IOException if the JSON Object is invalid with respect to VLAN
     */
    public static void validateJsonObject(JsonObject jsonObj) throws IOException {
        if (jsonObj == null) {
            if (VLAN.openapiRequiredFields.isEmpty()) {
                return;
            } else { // has required fields
                throw new IllegalArgumentException(String.format("The required field(s) %s in VLAN is not found in the empty JSON string", VLAN.openapiRequiredFields.toString()));
            }
        }
        
        Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
        // check to see if the JSON string contains additional fields
        for (Entry<String, JsonElement> entry : entries) {
            if (!VLAN.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VLAN` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
            }
        }
        
        // check to make sure all required properties/fields are present in the JSON string
        for (String requiredField : VLAN.openapiRequiredFields) {
            if (jsonObj.get(requiredField) == null) {
                throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
            }
        }
        if (jsonObj.get("url") != null && !jsonObj.get("url").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url")
                    .toString()));
        }
        if (jsonObj.get("display") != null && !jsonObj.get("display").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `display` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display")
                    .toString()));
        }
        // validate the optional field `site`
        if (jsonObj.getAsJsonObject("site") != null) {
            NestedSite.validateJsonObject(jsonObj.getAsJsonObject("site"));
        }
        // validate the optional field `group`
        if (jsonObj.getAsJsonObject("group") != null) {
            NestedVLANGroup.validateJsonObject(jsonObj.getAsJsonObject("group"));
        }
        if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name")
                    .toString()));
        }
        // validate the optional field `tenant`
        if (jsonObj.getAsJsonObject("tenant") != null) {
            NestedTenant.validateJsonObject(jsonObj.getAsJsonObject("tenant"));
        }
        // validate the optional field `status`
        if (jsonObj.getAsJsonObject("status") != null) {
            Status8.validateJsonObject(jsonObj.getAsJsonObject("status"));
        }
        // validate the optional field `role`
        if (jsonObj.getAsJsonObject("role") != null) {
            NestedRole.validateJsonObject(jsonObj.getAsJsonObject("role"));
        }
        if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description")
                    .toString()));
        }
        // validate the optional field `l2vpn_termination`
        if (jsonObj.getAsJsonObject("l2vpn_termination") != null) {
            NestedL2VPNTermination.validateJsonObject(jsonObj.getAsJsonObject("l2vpn_termination"));
        }
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
        if (jsonArraytags != null) {
            // ensure the json data is an array
            if (!jsonObj.get("tags").isJsonArray()) {
                throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags")
                        .toString()));
            }
            
            // validate the optional field `tags` (array)
            for (int i = 0; i < jsonArraytags.size(); i++) {
                NestedTag.validateJsonObject(jsonArraytags.get(i).getAsJsonObject());
            }
            ;
        }
    }
    
    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!VLAN.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'VLAN' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<VLAN> thisAdapter = gson.getDelegateAdapter(this, TypeToken.get(VLAN.class));
            
            return (TypeAdapter<T>) new TypeAdapter<VLAN>() {
                @Override
                public void write(JsonWriter out, VLAN value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }
                
                @Override
                public VLAN read(JsonReader in) throws IOException {
                    JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
                    validateJsonObject(jsonObj);
                    return thisAdapter.fromJsonTree(jsonObj);
                }
                
            }.nullSafe();
        }
    }
    
    /**
     * Create an instance of VLAN given an JSON string
     *
     * @param jsonString JSON string
     *
     * @return An instance of VLAN
     *
     * @throws IOException if the JSON string is invalid with respect to VLAN
     */
    public static VLAN fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, VLAN.class);
    }
    
    /**
     * Convert an instance of VLAN to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

